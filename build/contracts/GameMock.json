{
  "contractName": "GameMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isGamePaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInTBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkToUser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToTotalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToPaintedPixelsAmountForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        },
        {
          "name": "_refLink",
          "type": "string"
        }
      ],
      "name": "paint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerOfRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasReferrer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentPaintGenForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPlayedRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moneySpentByUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToTBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToStartTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToCBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paintsCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "newUserToCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainterForColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToOldColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isTBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToRefLink",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenStartedForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintedPixelForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nextCallPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPainterForRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixel",
          "type": "uint256"
        }
      ],
      "name": "getPixelColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefLink",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "referrerToReferrals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintsCounterForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "claimer",
          "type": "address"
        },
        {
          "name": "isResolved",
          "type": "bool"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerOfPixel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInCBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        }
      ],
      "name": "estimateCallPrice",
      "outputs": [
        {
          "name": "totalCallPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "colorBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToEndTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniqueUsersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToAmountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isCBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralToReferrer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPaintsInPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dividendsBank",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "pixelId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "colorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "painter",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Paint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "ColorBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "TimeBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCallPrice",
          "type": "uint256"
        }
      ],
      "name": "CallPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061034e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630422ddf31461035357806305bdd0be14610382578063099b81ce146103e75780630ba36221146104585780630baaea44146104a35780630cf9603f146105105780630daa42061461055b5780630f6ed86e146105ab578063102f9713146105d657806318452cd8146106435780631f5bdf5d1461069e5780631f90c6ed146106f957806324d7806c1461075e57806328361f57146107b957806328b290f9146107fa5780632c6c1c41146108515780632c7a3dae146108b257806333f9c3881461092957806334d34b9b1461098a5780633a173505146109a15780633c6dd013146109ec5780633ca4c18314610a2d5780633d0d1a7914610a8e5780633dc3c37714610acf578063411b007e14610afa57806341c5464e14610b5157806342e453ec14610ba85780634b39173d14610c1f5780634c438ad714610c6a5780634c78e40114610caf5780635bfcdb2714610cf05780635c25fd1314610dac5780635d63ebb214610dd75780635f5d554c14610e4e578063628a71a314610e9d5780636f17eb4214610ede578063715018a614610f1f57806373a9ee2614610f3657806379ecf37614610f775780637b68a8f014610fe45780637e1e175c1461102557806387982ac3146110805780638a19c8bc1461110d5780638da5cb5b146111385780638e2df39c1461118f5780638f32d59b146111d05780638f63b7e5146111ff578063954226dc1461124a578063a312072414611261578063a888c2cd146112ac578063a977e16814611332578063ab24c7d214611389578063abafb90e146113ee578063ae55ce8214611472578063b0ff59d2146114df578063b1a3883c14611540578063b8232d5d146115ab578063be7d6226146115f6578063c64a2e5614611637578063c957387b14611678578063c9f8234f146116c3578063d4526e68146116ee578063d5de47c714611737578063da68b12114611782578063deaf0fa1146117c7578063eaf1c9101461184a578063eef565da146118ab578063f2fde38b146118d6578063f49916f514611919578063f5f95b3b1461195a578063fb454d2914611985578063fea11fe3146119dc575b600080fd5b34801561035f57600080fd5b50610368611a07565b604051808215151515815260200191505060405180910390f35b34801561038e57600080fd5b506103cd60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a1a565b604051808215151515815260200191505060405180910390f35b3480156103f357600080fd5b506104166004803603810190808035600019169060200190929190505050611a49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046457600080fd5b5061048d6004803603810190808035906020019092919080359060200190929190505050611a7c565b6040518082815260200191505060405180910390f35b3480156104af57600080fd5b506104ce60048036038101908080359060200190929190505050611aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051c57600080fd5b506105456004803603810190808035906020019092919080359060200190929190505050611ad4565b6040518082815260200191505060405180910390f35b6105a960048036038101908080359060200190820180359060200191909192939192939080359060200190929190803590602001908201803590602001919091929391929390505050611af9565b005b3480156105b757600080fd5b506105c0612427565b6040518082815260200191505060405180910390f35b3480156105e257600080fd5b506106016004803603810190808035906020019092919050505061242d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064f57600080fd5b50610684600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612460565b604051808215151515815260200191505060405180910390f35b3480156106aa57600080fd5b506106df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612480565b604051808215151515815260200191505060405180910390f35b34801561070557600080fd5b5061074460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124a0565b604051808215151515815260200191505060405180910390f35b34801561076a57600080fd5b5061079f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124cf565b604051808215151515815260200191505060405180910390f35b3480156107c557600080fd5b506107e4600480360381019080803590602001909291905050506124ef565b6040518082815260200191505060405180910390f35b34801561080657600080fd5b5061083b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612507565b6040518082815260200191505060405180910390f35b34801561085d57600080fd5b5061089c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061251f565b6040518082815260200191505060405180910390f35b3480156108be57600080fd5b506108e76004803603810190808035906020019092919080359060200190929190505050612544565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093557600080fd5b5061097460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612591565b6040518082815260200191505060405180910390f35b34801561099657600080fd5b5061099f6125b6565b005b3480156109ad57600080fd5b506109d6600480360381019080803590602001909291908035906020019092919050505061262a565b6040518082815260200191505060405180910390f35b3480156109f857600080fd5b50610a176004803603810190808035906020019092919050505061264f565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a7860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612667565b6040518082815260200191505060405180910390f35b348015610a9a57600080fd5b50610ab96004803603810190808035906020019092919050505061268c565b6040518082815260200191505060405180910390f35b348015610adb57600080fd5b50610ae46126a4565b6040518082815260200191505060405180910390f35b348015610b0657600080fd5b50610b0f6126aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b5d57600080fd5b50610b92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126d0565b6040518082815260200191505060405180910390f35b348015610bb457600080fd5b50610bdd60048036038101908080359060200190929190803590602001909291905050506126e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c2b57600080fd5b50610c54600480360381019080803590602001909291908035906020019092919050505061272a565b6040518082815260200191505060405180910390f35b348015610c7657600080fd5b50610c956004803603810190808035906020019092919050505061274f565b604051808215151515815260200191505060405180910390f35b348015610cbb57600080fd5b50610cda6004803603810190808035906020019092919050505061276f565b6040518082815260200191505060405180910390f35b348015610cfc57600080fd5b50610d31600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612787565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d71578082015181840152602081019050610d56565b50505050905090810190601f168015610d9e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610db857600080fd5b50610dc1612837565b6040518082815260200191505060405180910390f35b348015610de357600080fd5b50610e0c600480360381019080803590602001909291908035906020019092919050505061283d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e5a57600080fd5b50610e83600480360381019080803590602001909291908035906020019092919050505061288a565b604051808215151515815260200191505060405180910390f35b348015610ea957600080fd5b50610ec8600480360381019080803590602001909291905050506128b9565b6040518082815260200191505060405180910390f35b348015610eea57600080fd5b50610f09600480360381019080803590602001909291905050506128d1565b6040518082815260200191505060405180910390f35b348015610f2b57600080fd5b50610f346128e9565b005b348015610f4257600080fd5b50610f6160048036038101908080359060200190929190505050612a24565b6040518082815260200191505060405180910390f35b348015610f8357600080fd5b50610fa260048036038101908080359060200190929190505050612a3c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ff057600080fd5b5061100f60048036038101908080359060200190929190505050612a6f565b6040518082815260200191505060405180910390f35b34801561103157600080fd5b50611066600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a9f565b604051808215151515815260200191505060405180910390f35b34801561108c57600080fd5b506110cb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612abf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561111957600080fd5b50611122612b0b565b6040518082815260200191505060405180910390f35b34801561114457600080fd5b5061114d612b11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561119b57600080fd5b506111ba60048036038101908080359060200190929190505050612b3a565b6040518082815260200191505060405180910390f35b3480156111dc57600080fd5b506111e5612b52565b604051808215151515815260200191505060405180910390f35b34801561120b57600080fd5b506112346004803603810190808035906020019092919080359060200190929190505050612ba9565b6040518082815260200191505060405180910390f35b34801561125657600080fd5b5061125f612bce565b005b34801561126d57600080fd5b506112966004803603810190808035906020019092919080359060200190929190505050612c54565b6040518082815260200191505060405180910390f35b3480156112b857600080fd5b506112d760048036038101908080359060200190929190505050612c79565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182815260200194505050505060405180910390f35b34801561133e57600080fd5b50611347612ce5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561139557600080fd5b506113d460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d0b565b604051808215151515815260200191505060405180910390f35b3480156113fa57600080fd5b5061145c6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190929190505050612d3a565b6040518082815260200191505060405180910390f35b34801561147e57600080fd5b5061149d60048036038101908080359060200190929190505050612f28565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156114eb57600080fd5b5061152a60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f5b565b6040518082815260200191505060405180910390f35b34801561154c57600080fd5b506115956004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f80565b6040518082815260200191505060405180910390f35b3480156115b757600080fd5b506115e06004803603810190808035906020019092919080359060200190929190505050612fb2565b6040518082815260200191505060405180910390f35b34801561160257600080fd5b5061162160048036038101908080359060200190929190505050612fd7565b6040518082815260200191505060405180910390f35b34801561164357600080fd5b5061166260048036038101908080359060200190929190505050612fef565b6040518082815260200191505060405180910390f35b34801561168457600080fd5b506116ad6004803603810190808035906020019092919080359060200190929190505050613007565b6040518082815260200191505060405180910390f35b3480156116cf57600080fd5b506116d861302c565b6040518082815260200191505060405180910390f35b3480156116fa57600080fd5b5061171d6004803603810190808035600019169060200190929190505050613032565b604051808215151515815260200191505060405180910390f35b34801561174357600080fd5b5061176c6004803603810190808035906020019092919080359060200190929190505050613052565b6040518082815260200191505060405180910390f35b34801561178e57600080fd5b506117ad60048036038101908080359060200190929190505050613077565b604051808215151515815260200191505060405180910390f35b3480156117d357600080fd5b50611808600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613097565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561185657600080fd5b5061189560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130ca565b6040518082815260200191505060405180910390f35b3480156118b757600080fd5b506118c06130ef565b6040518082815260200191505060405180910390f35b3480156118e257600080fd5b50611917600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130f5565b005b34801561192557600080fd5b506119446004803603810190808035906020019092919050505061317d565b6040518082815260200191505060405180910390f35b34801561196657600080fd5b5061196f613195565b6040518082815260200191505060405180910390f35b34801561199157600080fd5b506119c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061319b565b6040518082815260200191505060405180910390f35b3480156119e857600080fd5b506119f16131b3565b6040518082815260200191505060405180910390f35b604160149054906101000a900460ff1681565b60346020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60236020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e602052816000526040600020602052806000526040600020600091509150505481565b603a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b600082828080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505060008060011515601d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611e4a57611b94836131b9565b6fffffffffffffffffffffffffffffffff1916915060246000836000191660001916815260200190815260200160002060009054906101000a900460ff1615611d8f5760236000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050602060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080601f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b611da560016026546131d290919063ffffffff16565b602681905550602654602560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001601d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60001515604160149054906101000a900460ff161515141515611ed5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f47616d652069732070617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b611f0e89898080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505088612d3a565b34141515611f84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f57726f6e672063616c6c2070726963650000000000000000000000000000000081525060200191505060405180910390fd5b6104b0600a60006028548152602001908152602001600020544203118015611fc257506000600a600060285481526020019081526020016000205414155b156122be57600b6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061208c606461207e602d600960006028548152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b6036600060295481526020019081526020016000206000600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160106000602854815260200190815260200160002081905550612164600a6009600060285481526020019081526020016000205461323190919063ffffffff16565b600960006001602854018152602001908152602001600020819055506121bc60646121ae602d600960006028548152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b6009600060285481526020019081526020016000208190555060076000602854815260200190815260200160002054600760006001602854018152602001908152602001600020819055506000600760006028548152602001908152602001600020819055506028547f20f206bcab56eeef408295aaff8745adb98fed16823d758193e9449983d23fd2600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25b600093505b888890508410156122f9576122ec89898681811015156122df57fe5b905060200201358861325b565b83806001019450506122c3565b61230287613bd0565b61230b87613d6b565b61231487613fae565b61231d876140da565b602b60008154809291906001019190505550602e6000888152602001908152602001600020600081548092919060010191905055503360316000602b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033603260008981526020019081526020016000206000602e60008b815260200190815260200160002054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60295481565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60216020528060005260406000206000915054906101000a900460ff1681565b601d6020528060005260406000206000915054906101000a900460ff1681565b601b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60426020528060005260406000206000915054906101000a900460ff1681565b60176020528060005260406000206000915090505481565b60396020528060005260406000206000915090505481565b601a602052816000526040600020602052806000526040600020600091509150505481565b60306020528160005260406000208181548110151561255f57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6036602052816000526040600020602052806000526040600020600091509150505481565b670de0b6b3a764000060096000602854815260200190815260200160002081905550670de0b6b3a76400006007600060285481526020019081526020016000208190555061270e60066000602854815260200190815260200160002060006002815260200190815260200160002081905550565b6014602052816000526040600020602052806000526040600020600091509150505481565b60186020528060005260406000206000915090505481565b6035602052816000526040600020602052806000526040600020600091509150505481565b60106020528060005260406000206000915090505481565b602b5481565b604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60256020528060005260406000206000915090505481565b60326020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b60386020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60226020528060005260406000206000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561282f5780601f106128045761010080835404028352916020019161282f565b820191906000526020600020905b81548152906001019060200180831161281257829003601f168201915b505050505081565b603e5481565b602f6020528160005260406000208181548110151561285857fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60166020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60196020528060005260406000206000915090505481565b6128f1612b52565b1515612965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520646f6e742068617665206f776e65722072696768747300000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600a6020528060005260406000206000915090505481565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004600060285481526020019081526020016000206000838152602001908152602001600020549050919050565b601e6020528060005260406000206000915054906101000a900460ff1681565b6020805281600052604060002081815481101515612ad957fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60285481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b602e6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6011602052816000526040600020602052806000526040600020600091509150505481565b670de0b6b3a764000060096000602854815260200190815260200160002060008282540192505081905550670de0b6b3a76400006007600060285481526020019081526020016000206000828254019250508190555061270e60066000602854815260200190815260200160002060006002815260200190815260200160002081905550565b6008602052816000526040600020602052806000526040600020600091509150505481565b603f81815481101515612c8857fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154905084565b604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60336020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806000806000806000601a600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549550601b600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169450601c600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350600092505b8851831015612f1c57612e956064612e8786606403601960008d8152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b9150600115158515151415612eac57819050612ec3565b601960008981526020019081526020016000205490505b80870196508086019550670de0b6b3a764000086101515612f0f5760019450670de0b6b3a764000086811515612ef557fe5b049350678ac7230489e8000086101515612f0e57600a93505b5b8280600101935050612e50565b50505050505092915050565b60316020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602c602052816000526040600020602052806000526040600020600091509150505481565b602d60205282600052604060002060205281600052604060002060205280600052604060002060009250925050505481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60126020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b6015602052816000526040600020602052806000526040600020600091509150505481565b60265481565b60246020528060005260406000206000915054906101000a900460ff1681565b6013602052816000526040600020602052806000526040600020600091509150505481565b60376020528060005260406000206000915054906101000a900460ff1681565b601f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c602052816000526040600020602052806000526040600020600091509150505481565b60275481565b6130fd612b52565b1515613171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520646f6e742068617665206f776e65722072696768747300000000000081525060200191505060405180910390fd5b61317a8161424d565b50565b600d6020528060005260406000206000915090505481565b603d5481565b603b6020528060005260406000206000915090505481565b602a5481565b6000806060839050602081015191508192505050919050565b60008082840190508381101515156131e957600080fd5b8091505092915050565b6000806000841415613208576000915061322a565b828402905082848281151561321957fe5b0414151561322657600080fd5b8091505b5092915050565b60008060008311151561324357600080fd5b828481151561324e57fe5b0490508091505092915050565b600061326682614347565b60008314151515613305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f54686520706978656c2077697468206964203d203020646f6573206e6f74206581526020017f786973742e2e2e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600082141515156133a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f752063616e6e6f74207061696e7420746f207472616e73706172656e742081526020017f636f6c6f722e2e2e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8160046000602854815260200190815260200160002060008581526020019081526020016000205414151515613468576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f5468697320706978656c20697320616c7265616479206f66207468697320636f81526020017f6c6f722e2e2e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6004600060285481526020019081526020016000206000848152602001908152602001600020549050816004600060285481526020019081526020016000206000858152602001908152602001600020819055508060056000602854815260200190815260200160002060008581526020019081526020016000208190555042600a600060285481526020019081526020016000208190555033600b6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060066000602854815260200190815260200160002060008381526020019081526020016000205411156135e9576135be60016006600060285481526020019081526020016000206000848152602001908152602001600020546145e590919063ffffffff16565b6006600060285481526020019081526020016000206000838152602001908152602001600020819055505b61362360016006600060285481526020019081526020016000206000858152602001908152602001600020546131d290919063ffffffff16565b6006600060285481526020019081526020016000206000848152602001908152602001600020819055506136766001601260006028548152602001908152602001600020546131d290919063ffffffff16565b6012600060285481526020019081526020016000208190555042601160006028548152602001908152602001600020600085815260200190815260200160002081905550602c6000602954815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550602d6000602a548152602001908152602001600020600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506137da600160136000858152602001908152602001600020600060176000878152602001908152602001600020548152602001908152602001600020546145e590919063ffffffff16565b601360008481526020019081526020016000206000601760008681526020019081526020016000205481526020019081526020016000208190555082600c60006028548152602001908152602001600020819055506028543373ffffffffffffffffffffffffffffffffffffffff16847faf2d03aa2fdc9b785775529881274caad1884e0279e02729f03eca55d57eea728542604051808381526020018281526020019250505060405180910390a4602854603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127106006600060285481526020019081526020016000206000848152602001908152602001600020541415613bcb5781600d6000602854815260200190815260200160002081905550600b6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139de60646139d06032600760006028548152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b60356000602a5481526020019081526020016000206000600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600260106000602854815260200190815260200160002081905550613ac96064613abb6032600760006028548152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b6007600060285481526020019081526020016000208190555060096000602854815260200190815260200160002054600960006001602854018152602001908152602001600020819055506000600960006028548152602001908152602001600020819055506028547f14988f685a0376db6242cb37ed3033028bbc9e8fe0cc4b434a098e6c0150673f600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25b505050565b613c2f613bfa6064613bec6028346131f390919063ffffffff16565b61323190919063ffffffff16565b6008600060285481526020019081526020016000206000848152602001908152602001600020546131d290919063ffffffff16565b600860006028548152602001908152602001600020600083815260200190815260200160002081905550613ca7613c836064613c756028346131f390919063ffffffff16565b61323190919063ffffffff16565b600760006028548152602001908152602001600020546131d290919063ffffffff16565b60076000602854815260200190815260200160002081905550613d0e613cea6064613cdc6028346131f390919063ffffffff16565b61323190919063ffffffff16565b600960006028548152602001908152602001600020546131d290919063ffffffff16565b60096000602854815260200190815260200160002081905550613d62613d516064613d436014346131f390919063ffffffff16565b61323190919063ffffffff16565b603d546131d290919063ffffffff16565b603d8190555050565b613e07613d976064613d896019603d546131f390919063ffffffff16565b61323190919063ffffffff16565b603b6000604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131d290919063ffffffff16565b603b6000604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613e956064613e876019603d546131f390919063ffffffff16565b61323190919063ffffffff16565b603b6000603a600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550613f3d6064613f2f6019603d546131f390919063ffffffff16565b61323190919063ffffffff16565b603b6000604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b34601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550670de0b6b3a7640000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015156140d7576001601b600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b670de0b6b3a7640000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481151561413d57fe5b04601c600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550678ac7230489e80000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561424a57600a601c600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561428957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080605a601560008581526020019081526020016000206000600160176000888152602001908152602001600020540381526020019081526020016000205442031015156145e057601360008481526020019081526020016000206000601760008681526020019081526020016000205481526020019081526020016000205491506143f1600160176000868152602001908152602001600020546131d290919063ffffffff16565b90506000151560166000858152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16151514156144d557614446826027546145e590919063ffffffff16565b601360008581526020019081526020016000206000838152602001908152602001600020819055504260146000858152602001908152602001600020600083815260200190815260200160002081905550600160166000858152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60016013600085815260200190815260200160002060006017600087815260200190815260200160002054815260200190815260200160002054141561455b5761451e83614606565b4260156000858152602001908152602001600020600060176000878152602001908152602001600020548152602001908152602001600020819055505b6000601360008581526020019081526020016000206000601760008781526020019081526020016000205481526020019081526020016000205414156145df57601960008481526020019081526020016000205460186000858152602001908152602001600020819055508060176000858152602001908152602001600020819055505b5b505050565b6000808383111515156145f757600080fd5b82840390508091505092915050565b6146406064614632606960186000868152602001908152602001600020546131f390919063ffffffff16565b61323190919063ffffffff16565b601960008381526020019081526020016000208190555060186000828152602001908152602001600020547f3bb22f778670a5901bff4d41c425858dac1ea6aeb048d40f959a6bc43f98506160405160405180910390a2505600a165627a7a72305820426eba8d8cc07ce0c923020caa8a53b8158d06da21edd2dcdd7552c77422f1380029",
  "sourceMap": "48:1040:4:-;;;9977:42:14;9947:72;;;;;;;;;;;;;;;;;;;;10051:42;10025:68;;;;;;;;;;;;;;;;;;;;518:10:18;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;48:1040:4;;;;;;",
  "deployedSourceMap": "48:1040:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10104:24:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10104:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;8108:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8108:58:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5978:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5978:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2192:74:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8821:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:3418:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6761:23:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6761:23:14;;;;;;;;;;;;;;;;;;;;;;;2341:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2341:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5669:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5669:44:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5050:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4672:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4672:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10139:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10139:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3879:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8733:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8733:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4360:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7606:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7606:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8342:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8342:63:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:205:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:205:4;;;;;;3282:75:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3282:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4002:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4002:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8223:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8223:63:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2568:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6959:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6959:25:14;;;;;;;;;;;;;;;;;;;;;;;10025:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10025:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;6367:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6367:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7823:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7823:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8570:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1155:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5800:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5800:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9505:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9505:19:14;;;;;;;;;;;;;;;;;;;;;;;7510:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7510:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3681:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3681:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1710:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4140:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:18;;;;;;1366:51:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1567:52:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:131:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:131:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:43:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5290:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5522:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6681:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6681:24:14;;;;;;;;;;;;;;;;;;;;;;;639:70:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:51:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7404:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:18;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:72:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2749:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:208:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:208:4;;;;;;989:72:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9530:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9530:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9947:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9947:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;7974:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7974:58:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:1019:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1102:1019:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7703:49:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7703:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7061:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7061:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7211:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7211:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2947:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;805:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3490:73:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6496:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6496:28:14;;;;;;;;;;;;;;;;;;;;;;;6158:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6158:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3081:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3081:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8467:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8467:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5394:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5394:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6615:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6615:27:14;;;;;;;;;;;;;;;;;;;;;;;1561:101:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:49:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1920:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9356:25:14;;;;;;;;;;;;;;;;;;;;;;;9014:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9014:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6836:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6836:23:14;;;;;;;;;;;;;;;;;;;;;;;10104:24;;;;;;;;;;;;;:::o;8108:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5978:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;2192:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8821:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;637:82::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2127:3418:3:-;4233:6;2218:8;;927:813:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1119:15;1320:16;1099:4;1067:36;;:16;:28;1084:10;1067:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;1063:660;;;1137:19;1147:8;1137:9;:19::i;:::-;1119:37;;;;;1277:13;:22;1291:7;1277:22;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:274;;;1339:13;:22;1353:7;1339:22;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:41;;1379:19;:29;1399:8;1379:29;;;;;;;;;;;;;;;1414:10;1379:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1379:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1476:8;1443:18;:30;1462:10;1443:30;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1528:4;1502:11;:23;1514:10;1502:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1273:274;1579:23;1600:1;1579:16;;:20;;:23;;;;:::i;:::-;1560:16;:42;;;;1647:16;;1616;:28;1633:10;1616:28;;;;;;;;;;;;;;;:47;;;;1708:4;1677:16;:28;1694:10;1677:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1063:660;484:5;468:21;;:12;;;;;;;;;;;:21;;;460:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:34:3;2289:7;;2271:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:6;2271:17;:34::i;:::-;2258:9;:47;2250:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:10;2514:21;:35;2536:12;;2514:35;;;;;;;;;;;;2508:3;:41;:54;:98;;;;;2605:1;2566:21;:35;2588:12;;2566:35;;;;;;;;;;;;:40;;2508:98;2504:1658;;;2918:19;:33;2938:12;;2918:33;;;;;;;;;;;;;;;;;;;;;2888:13;:27;2902:12;;2888:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;3024:47;3067:3;3024:38;3059:2;3024:16;:30;3041:12;;3024:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;2966:12;:25;2979:11;;2966:25;;;;;;;;;;;:54;2992:13;:27;3006:12;;2992:27;;;;;;;;;;;;;;;;;;;;;2966:54;;;;;;;;;;;;;;;;:105;;;;;;;;;;;3234:1;3199:18;:32;3218:12;;3199:32;;;;;;;;;;;:36;;;;3383:38;3418:2;3383:16;:30;3400:12;;3383:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;3346:16;:34;3378:1;3363:12;;:16;3346:34;;;;;;;;;;;:75;;;;3611:47;3654:3;3611:38;3646:2;3611:16;:30;3628:12;;3611:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;3578:16;:30;3595:12;;3578:30;;;;;;;;;;;:80;;;;3803:17;:31;3821:12;;3803:31;;;;;;;;;;;;3765:17;:35;3798:1;3783:12;;:16;3765:35;;;;;;;;;;;:69;;;;3963:1;3929:17;:31;3947:12;;3929:31;;;;;;;;;;;:35;;;;4138:12;;4094:57;4109:13;:27;4123:12;;4109:27;;;;;;;;;;;;;;;;;;;;;4094:57;;;;;;;;;;;;;;;;;;;;;;2504:1658;4242:1;4233:10;;4228:93;4249:7;;:14;;4245:1;:18;4228:93;;;4284:26;4291:7;;4299:1;4291:10;;;;;;;;;;;;;;;4303:6;4284;:26::i;:::-;4265:3;;;;;;;4228:93;;;4406:17;4416:6;4406:9;:17::i;:::-;4559:28;4580:6;4559:20;:28::i;:::-;4769:36;4798:6;4769:28;:36::i;:::-;4975:38;5006:6;4975:30;:38::i;:::-;5024:13;;:15;;;;;;;;;;;;;5115:21;:29;5137:6;5115:29;;;;;;;;;;;;:32;;;;;;;;;;;;;5267:10;5233:16;:31;5250:13;;5233:31;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;5423:10;5357:24;:32;5382:6;5357:32;;;;;;;;;;;:63;5390:21;:29;5412:6;5390:29;;;;;;;;;;;;5357:63;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;2127:3418;;;;;;;;;:::o;6761:23:14:-;;;;:::o;2341:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;5669:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;5050:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4672:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10139:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;3879:53::-;;;;;;;;;;;;;;;;;:::o;8733:48::-;;;;;;;;;;;;;;;;;:::o;4360:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7606:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8342:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;666:205:4:-;738:7;705:16;:30;722:12;;705:30;;;;;;;;;;;:40;;;;789:7;755:17;:31;773:12;;755:31;;;;;;;;;;;:41;;;;860:4;806:34;:48;841:12;;806:48;;;;;;;;;;;:51;855:1;806:51;;;;;;;;;;;:58;;;;666:205::o;3282:75:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4002:47::-;;;;;;;;;;;;;;;;;:::o;8223:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2568:48::-;;;;;;;;;;;;;;;;;:::o;6959:25::-;;;;:::o;10025:68::-;;;;;;;;;;;;;:::o;6367:49::-;;;;;;;;;;;;;;;;;:::o;7823:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;360:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8570:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1155:46::-;;;;;;;;;;;;;;;;;:::o;5800:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9505:19::-;;;;:::o;7510:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3681:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1710:54::-;;;;;;;;;;;;;;;;;:::o;4140:51::-;;;;;;;;;;;;;;;;;:::o;1273:127:18:-;364:9:7;:7;:9::i;:::-;356:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:1:18;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1366:51:14:-;;;;;;;;;;;;;;;;;:::o;1567:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;838:131:3:-;897:4;920:20;:34;941:12;;920:34;;;;;;;;;;;:42;955:6;920:42;;;;;;;;;;;;913:49;;838:131;;;:::o;5290:43:14:-;;;;;;;;;;;;;;;;;;;;;;:::o;5522:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6681:24::-;;;;:::o;639:70:18:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;7404:51:14:-;;;;;;;;;;;;;;;;;:::o;926:83:18:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2749:72:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;877:208:4:-;951:7;917:16;:30;934:12;;917:30;;;;;;;;;;;;:41;;;;;;;;;;;1003:7;968:17;:31;986:12;;968:31;;;;;;;;;;;;:42;;;;;;;;;;;1074:4;1020:34;:48;1055:12;;1020:48;;;;;;;;;;;:51;1069:1;1020:51;;;;;;;;;;;:58;;;;877:208::o;989:72:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9530:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9947:72::-;;;;;;;;;;;;;:::o;7974:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1102:1019:3:-;1179:19;1211:15;1283:16;1356:13;1442:6;1506:22;1660:10;1229:24;:32;1254:6;1229:32;;;;;;;;;;;:44;1262:10;1229:44;;;;;;;;;;;;;;;;1211:62;;1302:24;:32;1327:6;1302:32;;;;;;;;;;;:44;1335:10;1302:44;;;;;;;;;;;;;;;;;;;;;;;;;1283:63;;1372:26;:34;1399:6;1372:34;;;;;;;;;;;:46;1407:10;1372:46;;;;;;;;;;;;;;;;1356:62;;1451:1;1442:10;;1437:675;1458:7;:14;1454:1;:18;1437:675;;;1531:60;1587:3;1532:49;1572:8;1566:3;:14;1532:21;:29;1554:6;1532:29;;;;;;;;;;;;:33;;:49;;;;:::i;:::-;1531:55;;:60;;;;:::i;:::-;1506:85;;1637:4;1622:19;;:11;:19;;;1618:144;;;1673:17;1660:30;;1618:144;;;1733:21;:29;1755:6;1733:29;;;;;;;;;;;;1725:37;;1618:144;1796:5;1778:23;;;;1829:5;1815:19;;;;1867:7;1853:10;:21;;1849:240;;;1925:4;1911:18;;1971:7;1958:10;:20;;;;;;;;1947:31;;2031:8;2017:10;:22;;2013:61;;;2072:2;2061:13;;2013:61;1849:240;1474:3;;;;;;;1437:675;;;1102:1019;;;;;;;;;;:::o;7703:49:14:-;;;;;;;;;;;;;;;;;;;;;;:::o;7061:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7211:83::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;177:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2947:49::-;;;;;;;;;;;;;;;;;:::o;805:47::-;;;;;;;;;;;;;;;;;:::o;3490:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6496:28::-;;;;:::o;6158:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;3081:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8467:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5394:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4897:77::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6615:27::-;;;;:::o;1561:101:18:-;364:9:7;:7;:9::i;:::-;356:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:28:18;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1920:49:14:-;;;;;;;;;;;;;;;;;:::o;9356:25::-;;;;:::o;9014:51::-;;;;;;;;;;;;;;;;;:::o;6836:23::-;;;;:::o;1841:610:7:-;1899:7;2069:20;2099:17;2119:7;2099:27;;2402:2;2397:3;2393:12;2387:19;2371:35;;2432:12;2425:19;;1841:610;;;;;:::o;1272:131:17:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;204:381::-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;695:270::-;753:7;846:9;780:1;776;:5;768:14;;;;;;;;862:1;858;:5;;;;;;;;846:17;;959:1;952:8;;695:270;;;;;:::o;5628:4771:3:-;6218:13;5822:23;5838:6;5822:15;:23::i;:::-;5874:1;5864:6;:11;;5856:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5947:1;5937:6;:11;;5929:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:6;6011:20;:34;6032:12;;6011:34;;;;;;;;;;;:42;6046:6;6011:42;;;;;;;;;;;;:52;;6003:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6234:20;:34;6255:12;;6234:34;;;;;;;;;;;:42;6269:6;6234:42;;;;;;;;;;;;6218:58;;6396:6;6351:20;:34;6372:12;;6351:34;;;;;;;;;;;:42;6386:6;6351:42;;;;;;;;;;;:51;;;;6552:8;6504:23;:37;6528:12;;6504:37;;;;;;;;;;;:45;6542:6;6504:45;;;;;;;;;;;:56;;;;6756:3;6718:21;:35;6740:12;;6718:35;;;;;;;;;;;:41;;;;6966:10;6930:19;:33;6950:12;;6930:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;7199:1;7138:34;:48;7173:12;;7138:48;;;;;;;;;;;:58;7187:8;7138:58;;;;;;;;;;;;:62;7134:207;;;7276:65;7339:1;7276:34;:48;7311:12;;7276:48;;;;;;;;;;;:58;7325:8;7276:58;;;;;;;;;;;;:62;;:65;;;;:::i;:::-;7215:34;:48;7250:12;;7215:48;;;;;;;;;;;:58;7264:8;7215:58;;;;;;;;;;;:126;;;;7134:207;7530:63;7591:1;7530:34;:48;7565:12;;7530:48;;;;;;;;;;;:56;7579:6;7530:56;;;;;;;;;;;;:60;;:63;;;;:::i;:::-;7471:34;:48;7506:12;;7471:48;;;;;;;;;;;:56;7520:6;7471:56;;;;;;;;;;;:122;;;;7813:40;7851:1;7813:19;:33;7833:12;;7813:33;;;;;;;;;;;;:37;;:40;;;;:::i;:::-;7777:19;:33;7797:12;;7777:33;;;;;;;;;;;:76;;;;7914:3;7865:24;:38;7890:12;;7865:38;;;;;;;;;;;:46;7904:6;7865:46;;;;;;;;;;;:52;;;;7928:13;:26;7942:11;;7928:26;;;;;;;;;;;:38;7955:10;7928:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;7978:14;:27;7993:11;;7978:27;;;;;;;;;;;:35;8006:6;7978:35;;;;;;;;;;;:47;8014:10;7978:47;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;8229:72;8299:1;8229:24;:32;8254:6;8229:32;;;;;;;;;;;:65;8262:23;:31;8286:6;8262:31;;;;;;;;;;;;8229:65;;;;;;;;;;;;:69;;:72;;;;:::i;:::-;8161:24;:32;8186:6;8161:32;;;;;;;;;;;:65;8194:23;:31;8218:6;8194:31;;;;;;;;;;;;8161:65;;;;;;;;;;;:140;;;;8480:6;8439:24;:38;8464:12;;8439:38;;;;;;;;;;;:47;;;;8683:12;;8671:10;8649:52;;8655:6;8649:52;8663:6;8697:3;8649:52;;;;;;;;;;;;;;;;;;;;;;;;8930:12;;8900:15;:27;8916:10;8900:27;;;;;;;;;;;;;;;:42;;;;9196:5;9136:34;:48;9171:12;;9136:48;;;;;;;;;;;:56;9185:6;9136:56;;;;;;;;;;;;:65;9132:1261;;;9329:6;9293:19;:33;9313:12;;9293:33;;;;;;;;;;;:42;;;;9465:19;:33;9485:12;;9465:33;;;;;;;;;;;;;;;;;;;;;9435:13;:27;9449:12;;9435:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;9578:48;9622:3;9578:39;9614:2;9578:17;:31;9596:12;;9578:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;9520:12;:25;9533:11;;9520:25;;;;;;;;;;;:54;9546:13;:27;9560:12;;9546:27;;;;;;;;;;;;;;;;;;;;;9520:54;;;;;;;;;;;;;;;;:106;;;;;;;;;;;9676:1;9641:18;:32;9660:12;;9641:32;;;;;;;;;;;:36;;;;9927:48;9971:3;9927:39;9963:2;9927:17;:31;9945:12;;9927:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;9893:17;:31;9911:12;;9893:31;;;;;;;;;;;:82;;;;10027:16;:30;10044:12;;10027:30;;;;;;;;;;;;9990:16;:34;10022:1;10007:12;;:16;9990:34;;;;;;;;;;;:67;;;;10187:1;10154:16;:30;10171:12;;10154:30;;;;;;;;;;;:34;;;;10335:12;;10290:58;10306:13;:27;10320:12;;10306:27;;;;;;;;;;;;;;;;;;;;;10290:58;;;;;;;;;;;;;;;;;;;;;;9132:1261;5628:4771;;;:::o;10466:702::-;10574:78;10625:26;10647:3;10625:17;10639:2;10625:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10574:24;:38;10599:12;;10574:38;;;;;;;;;;;:46;10613:6;10574:46;;;;;;;;;;;;:50;;:78;;;;:::i;:::-;10525:24;:38;10550:12;;10525:38;;;;;;;;;;;:46;10564:6;10525:46;;;;;;;;;;;:127;;;;10756:63;10792:26;10814:3;10792:17;10806:2;10792:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10756:17;:31;10774:12;;10756:31;;;;;;;;;;;;:35;;:63;;;;:::i;:::-;10722:17;:31;10740:12;;10722:31;;;;;;;;;;;:97;;;;10926:62;10961:26;10983:3;10961:17;10975:2;10961:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10926:16;:30;10943:12;;10926:30;;;;;;;;;;;;:34;;:62;;;;:::i;:::-;10893:16;:30;10910:12;;10893:30;;;;;;;;;;;:95;;;;11115:45;11133:26;11155:3;11133:17;11147:2;11133:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;11115:13;;:17;;:45;;;;:::i;:::-;11099:13;:61;;;;10466:702;:::o;11412:942::-;11733:64;11766:30;11792:3;11766:21;11784:2;11766:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;11733:18;:28;11752:8;;;;;;;;;;;11733:28;;;;;;;;;;;;;;;;:32;;:64;;;;:::i;:::-;11702:18;:28;11721:8;;;;;;;;;;;11702:28;;;;;;;;;;;;;;;:95;;;;11953:30;11979:3;11953:21;11971:2;11953:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;11909:18;:40;11928:12;:20;11941:6;11928:20;;;;;;;;;;;;;;;;;;;;;11909:40;;;;;;;;;;;;;;;;:74;;;;;;;;;;;12134:30;12160:3;12134:21;12152:2;12134:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;12098:18;:32;12117:12;;;;;;;;;;;12098:32;;;;;;;;;;;;;;;;:66;;;;;;;;;;;11412:942;:::o;1098:278:8:-;1225:9;1177:24;:32;1202:6;1177:32;;;;;;;;;;;:44;1210:10;1177:44;;;;;;;;;;;;;;;;:57;;;;;;;;;;;1297:7;1249:24;:32;1274:6;1249:32;;;;;;;;;;;:44;1282:10;1249:44;;;;;;;;;;;;;;;;:55;;1245:124;;;1365:4;1318:24;:32;1343:6;1318:32;;;;;;;;;;;:44;1351:10;1318:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1245:124;1098:278;:::o;370:508::-;629:7;582:24;:32;607:6;582:32;;;;;;;;;;;:44;615:10;582:44;;;;;;;;;;;;;;;;:54;;;;;;;;533:26;:34;560:6;533:34;;;;;;;;;;;:46;568:10;533:46;;;;;;;;;;;;;;;:103;;;;789:8;741:24;:32;766:6;741:32;;;;;;;;;;;:44;774:10;741:44;;;;;;;;;;;;;;;;:56;;737:125;;;860:2;811:26;:34;838:6;811:34;;;;;;;;;;;:46;846:10;811:46;;;;;;;;;;;;;;;:51;;;;737:125;370:508;:::o;1796:169:18:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;916:2525:9:-;1295:17;1473;1173:11;1099:25;:33;1125:6;1099:33;;;;;;;;;;;:70;1167:1;1133:23;:31;1157:6;1133:31;;;;;;;;;;;;:35;1099:70;;;;;;;;;;;;1093:3;:76;:91;;1089:2346;;;1315:24;:32;1340:6;1315:32;;;;;;;;;;;:65;1348:23;:31;1372:6;1348:31;;;;;;;;;;;;1315:65;;;;;;;;;;;;1295:85;;1493:38;1529:1;1493:23;:31;1517:6;1493:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;1473:58;;1760:5;1711:54;;:23;:31;1735:6;1711:31;;;;;;;;;;;:45;1743:12;1711:45;;;;;;;;;;;;;;;;;;;;;:54;;;1707:573;;;1989:33;2009:12;1989:15;;:19;;:33;;;;:::i;:::-;1940:24;:32;1965:6;1940:32;;;;;;;;;;;:46;1973:12;1940:46;;;;;;;;;;;:82;;;;2190:3;2138:27;:35;2166:6;2138:35;;;;;;;;;;;:49;2174:12;2138:49;;;;;;;;;;;:55;;;;2261:4;2213:23;:31;2237:6;2213:31;;;;;;;;;;;:45;2245:12;2213:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1707:573;2379:1;2310:24;:32;2335:6;2310:32;;;;;;;;;;;:65;2343:23;:31;2367:6;2343:31;;;;;;;;;;;;2310:65;;;;;;;;;;;;:70;2306:499;;;2556:24;2573:6;2556:16;:24::i;:::-;2787:3;2718:25;:33;2744:6;2718:33;;;;;;;;;;;:66;2752:23;:31;2776:6;2752:31;;;;;;;;;;;;2718:66;;;;;;;;;;;:72;;;;2306:499;3012:1;2943:24;:32;2968:6;2943:32;;;;;;;;;;;:65;2976:23;:31;3000:6;2976:31;;;;;;;;;;;;2943:65;;;;;;;;;;;;:70;2939:486;;;3194:21;:29;3216:6;3194:29;;;;;;;;;;;;3166:17;:25;3184:6;3166:25;;;;;;;;;;;:57;;;;3398:12;3364:23;:31;3388:6;3364:31;;;;;;;;;;;:46;;;;2939:486;1089:2346;916:2525;;;:::o;1078:131:17:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;193:467:4:-;425:43;464:3;425:34;455:3;425:17;:25;443:6;425:25;;;;;;;;;;;;:29;;:34;;;;:::i;:::-;:38;;:43;;;;:::i;:::-;393:21;:29;415:6;393:29;;;;;;;;;;;:75;;;;627:17;:25;645:6;627:25;;;;;;;;;;;;610:43;;;;;;;;;;193:467;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./Game.sol\";\n\ncontract GameMock is Game {\n\n    //функция обновления цены вызова функции закрашивания (paint)\n    function _updateCallPrice(uint _color) private {\n        \n        //увеличиваем цену вызова на 5% (используем для отображения на фронте)\n        nextCallPriceForColor[_color] = callPriceForColor[_color].mul(105).div(100);\n        \n        //вызываем ивент о том, что цена вызова функции paint обновлена\n        emit CallPriceUpdated(callPriceForColor[_color]);\n    }\n\n    function hardCode() external {\n        timeBankForRound[currentRound] = 1 ether;\n        colorBankForRound[currentRound] = 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n    function hardCode2() external {\n        timeBankForRound[currentRound] += 1 ether;\n        colorBankForRound[currentRound] += 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n}",
  "sourcePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
  "ast": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1590,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1591,
        "nodeType": "ImportDirective",
        "scope": 1669,
        "sourceUnit": 1589,
        "src": "26:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1592,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1588,
              "src": "69:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1588",
                "typeString": "contract Game"
              }
            },
            "id": 1593,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:4"
          }
        ],
        "contractDependencies": [
          1588,
          1890,
          1974,
          2140,
          2437,
          2732,
          3468
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1668,
        "linearizedBaseContracts": [
          1668,
          1588,
          1890,
          2140,
          1974,
          2732,
          2437,
          3468
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "240:420:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1598,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "393:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "415:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "393:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "464:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "455:3:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1601,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2546,
                                "src": "425:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1603,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1602,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "443:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "425:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3266,
                            "src": "425:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3290,
                        "src": "425:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "425:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "393:75:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "393:75:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1613,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "627:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1614,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "645:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1612,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1987,
                      "src": "610:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:43:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1617,
                  "nodeType": "EmitStatement",
                  "src": "605:48:4"
                }
              ]
            },
            "documentation": null,
            "id": 1619,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "219:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "218:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:4"
            },
            "scope": 1668,
            "src": "193:467:4",
            "stateMutability": "nonpayable",
            "superFunction": 2013,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1642,
              "nodeType": "Block",
              "src": "695:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2474,
                        "src": "705:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1624,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "722:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "705:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "738:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "705:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "705:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1628,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2464,
                        "src": "755:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1630,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "773:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "755:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "755:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1633,
                  "nodeType": "ExpressionStatement",
                  "src": "755:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1634,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "806:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2611,
                          "src": "841:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "806:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1638,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "806:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "806:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1641,
                  "nodeType": "ExpressionStatement",
                  "src": "806:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1643,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:4"
            },
            "scope": 1668,
            "src": "666:205:4",
            "stateMutability": "nonpayable",
            "superFunction": 875,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "907:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1646,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2474,
                        "src": "917:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1648,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1647,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "934:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "917:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "917:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1651,
                  "nodeType": "ExpressionStatement",
                  "src": "917:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1652,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2464,
                        "src": "968:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1653,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "986:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "968:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "968:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1657,
                  "nodeType": "ExpressionStatement",
                  "src": "968:42:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1658,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "1020:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1661,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1659,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2611,
                          "src": "1055:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1662,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1020:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1667,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:4"
            },
            "scope": 1668,
            "src": "877:208:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1669,
        "src": "48:1040:4"
      }
    ],
    "src": "0:1088:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1590,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1591,
        "nodeType": "ImportDirective",
        "scope": 1669,
        "sourceUnit": 1589,
        "src": "26:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1592,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1588,
              "src": "69:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1588",
                "typeString": "contract Game"
              }
            },
            "id": 1593,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:4"
          }
        ],
        "contractDependencies": [
          1588,
          1890,
          1974,
          2140,
          2437,
          2732,
          3468
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1668,
        "linearizedBaseContracts": [
          1668,
          1588,
          1890,
          2140,
          1974,
          2732,
          2437,
          3468
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "240:420:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1598,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2550,
                        "src": "393:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1600,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "415:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "393:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "464:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "455:3:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1601,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2546,
                                "src": "425:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1603,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1602,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "443:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "425:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3266,
                            "src": "425:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3290,
                        "src": "425:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "425:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "393:75:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "393:75:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1613,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "627:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1614,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "645:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1612,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1987,
                      "src": "610:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:43:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1617,
                  "nodeType": "EmitStatement",
                  "src": "605:48:4"
                }
              ]
            },
            "documentation": null,
            "id": 1619,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "219:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "218:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:4"
            },
            "scope": 1668,
            "src": "193:467:4",
            "stateMutability": "nonpayable",
            "superFunction": 2013,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1642,
              "nodeType": "Block",
              "src": "695:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1622,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2474,
                        "src": "705:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1624,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1623,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "722:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "705:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "738:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "705:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "705:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1628,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2464,
                        "src": "755:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1630,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1629,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "773:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "755:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "755:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1633,
                  "nodeType": "ExpressionStatement",
                  "src": "755:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1634,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "806:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1635,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2611,
                          "src": "841:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "806:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1638,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "806:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "806:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1641,
                  "nodeType": "ExpressionStatement",
                  "src": "806:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1643,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:4"
            },
            "scope": 1668,
            "src": "666:205:4",
            "stateMutability": "nonpayable",
            "superFunction": 875,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "907:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1646,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2474,
                        "src": "917:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1648,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1647,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "934:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "917:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "917:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1651,
                  "nodeType": "ExpressionStatement",
                  "src": "917:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1652,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2464,
                        "src": "968:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1653,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "986:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "968:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "968:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1657,
                  "nodeType": "ExpressionStatement",
                  "src": "968:42:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1658,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "1020:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1661,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1659,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2611,
                          "src": "1055:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1662,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1020:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1667,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:4"
            },
            "scope": 1668,
            "src": "877:208:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1669,
        "src": "48:1040:4"
      }
    ],
    "src": "0:1088:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-07T13:01:30.397Z"
}