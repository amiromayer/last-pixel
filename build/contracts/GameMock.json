{
  "contractName": "GameMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isGamePaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInTBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkToUser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToTotalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToPaintedPixelsAmountForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerOfRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasReferrer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentPaintGenForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPlayedRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moneySpentByUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToTBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        }
      ],
      "name": "paint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToStartTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToCBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resumeGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paintsCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "newUserToCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainterForColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimId",
          "type": "uint256"
        }
      ],
      "name": "approveClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pauseGame",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToOldColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isTBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToRefLink",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenStartedForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintedPixelForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimDividends",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nextCallPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_new",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPainterForRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixel",
          "type": "uint256"
        }
      ],
      "name": "getPixelColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefLink",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "referrerToReferrals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintsCounterForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "claimer",
          "type": "address"
        },
        {
          "name": "isResolved",
          "type": "bool"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerOfPixel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInCBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        }
      ],
      "name": "estimateCallPrice",
      "outputs": [
        {
          "name": "totalCallPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "colorBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToEndTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniqueUsersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToAmountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isCBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralToReferrer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPaintsInPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dividendsBank",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "pixelId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "colorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "painter",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Paint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "ColorBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "TimeBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DividendsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "currentTime",
          "type": "uint256"
        }
      ],
      "name": "DividendsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCallPrice",
          "type": "uint256"
        }
      ],
      "name": "CallPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "cbIteration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "CBPDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "48:1040:3:-;;;3435:42:1;3405:72;;;;;;;;;;;;;;;;;;;;3509:42;3483:68;;;;;;;;;;;;;;;;;;;;1000:6:2;562::1;518:10:12;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;249:4:9;227:7;:19;235:10;227:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;571:1:1;562:10;;557:115;579:1;574;:6;;557:115;;;619:42;601:12;:15;614:1;601:15;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;582:3;;;;;;;557:115;;;365:313;873:5:2;855:15;:23;;;;925:1;910:12;:16;;;;950:1;936:11;:15;;;;975:1;961:11;:15;;;;1009:1;1000:10;;995:798;1017:1;1012;:6;;995:798;;;1068:1;1039:23;:26;1063:1;1039:26;;;;;;;;;;;:30;;;;1106:10;1083:17;:20;1101:1;1083:20;;;;;;;;;;;:33;;;;1157:17;:20;1175:1;1157:20;;;;;;;;;;;;1130:21;:24;1152:1;1130:24;;;;;;;;;;;:47;;;;1249:15;;1191:24;:27;1216:1;1191:27;;;;;;;;;;;:55;1219:23;:26;1243:1;1219:26;;;;;;;;;;;;1191:55;;;;;;;;;;;:73;;;;1335:4;1278:23;:26;1302:1;1278:26;;;;;;;;;;;:54;1305:23;:26;1329:1;1305:26;;;;;;;;;;;;1278:54;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;1503:1;1466:19;:33;1486:12;;1466:33;;;;;;;;;;;;:38;1462:143;;;1587:3;1524:25;:28;1550:1;1524:28;;;;;;;;;;;:60;1582:1;1553:23;:26;1577:1;1553:26;;;;;;;;;;;;:30;1524:60;;;;;;;;;;;:66;;;;1462:143;1692:3;1631:27;:30;1659:1;1631:30;;;;;;;;;;;:58;1662:23;:26;1686:1;1662:26;;;;;;;;;;;;1631:58;;;;;;;;;;;:64;;;;1767:15;;1709:24;:27;1734:1;1709:27;;;;;;;;;;;:55;1737:23;:26;1761:1;1737:26;;;;;;;;;;;;1709:55;;;;;;;;;;;:73;;;;1020:3;;;;;;;995:798;;;806:1002;48:1040:3;;;;;;",
  "deployedSourceMap": "48:1040:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;93:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;7869:58:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7869:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6017:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2228:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:45:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:82:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:82:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6753:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6753:23:10;;;;;;;;;;;;;;;;;;;;;;;2377:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2377:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:96:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:96:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;5708:44:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5708:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5089:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5089:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4710:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4710:75:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:39:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;144:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3916:53:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3916:53:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8304:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8304:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4398:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4398:75:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7460:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7460:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8087:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8087:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;666:205:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:205:3;;;;;;3838:3382:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3319:75:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3319:75:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4039:47:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7973:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7973:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:142:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:142:4;;;;;;2604:48:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2604:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6811:25:10;;;;;;;;;;;;;;;;;;;;;;;3483:68:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3483:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;6406:49:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6406:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7624:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7624:75:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2126:883:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2126:883:1;;;;;;;;;;;;;;;;;;;;;;;;;;228:143:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:143:4;;;;;;396:71:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;396:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8252:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8252:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1191:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5839:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5839:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5839:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:19:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1526:19:1;;;;;;;;;;;;;;;;;;;;;;;7395:41:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7395:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3718:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3718:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:539:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1581:539:1;;;;;;4177:51:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4177:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:88:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:88:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:12;;;;;;1402:51:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1402:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1603:52:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:131:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2110:131:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5329:43:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5329:43:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5561:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5561:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6722:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6722:24:10;;;;;;;;;;;;;;;;;;;;;;;601:88:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:88:9;;;;;;639:70:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;7239:51:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7239:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;2785:72:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2785:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:208:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:208:3;;;;;;1025:72:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1025:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:21:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1551:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3405:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;7765:58:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7765:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:1027:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2800:1027:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7525:49:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7525:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7001:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7001:64:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7150:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7150:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2984:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2984:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;841:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;841:47:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3527:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3527:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6535:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6535:28:10;;;;;;;;;;;;;;;;;;;;;;;6197:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6197:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3118:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3118:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8201:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8201:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5433:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5433:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4935:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4935:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6655:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6655:27:10;;;;;;;;;;;;;;;;;;;;;;;1561:101:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:49:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1170:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1170:25:1;;;;;;;;;;;;;;;;;;;;;;;828:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;828:51:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6782:23:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6782:23:10;;;;;;;;;;;;;;;;;;;;;;;93:24:4;;;;;;;;;;;;;:::o;7869:58:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6017:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;2228:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;309:45:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;673:82:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6753:23::-;;;;:::o;2377:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;499:96:9:-;824:9:12;:7;:9::i;:::-;816:18;;;;;;;;583:5:9;565:7;:15;573:6;565:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;499:96;:::o;5708:44:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;5089:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4710:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;144:39:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;3916:53:10:-;;;;;;;;;;;;;;;;;:::o;8304:48::-;;;;;;;;;;;;;;;;;:::o;4398:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7460:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8087:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;666:205:3:-;738:7;705:16;:30;722:12;;705:30;;;;;;;;;;;:40;;;;789:7;755:17;:31;773:12;;755:31;;;;;;;;;;;:41;;;;860:4;806:34;:48;841:12;;806:48;;;;;;;;;;;:51;855:1;806:51;;;;;;;;;;;:58;;;;666:205::o;3838:3382:2:-;5908:6;2519:5;2487:37;;:16;:28;2504:10;2487:28;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;2483:159;;;2571:4;2540:16;:28;2557:10;2540:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2608:23;2629:1;2608:16;;:20;;:23;;;;:::i;:::-;2589:16;:42;;;;2483:159;180:5:4;164:21;;:12;;;;;;;;;;;:21;;;156:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3955:34:2;3973:7;;3955:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:6;3955:17;:34::i;:::-;3942:9;:47;3934:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4228:10;4190:21;:35;4212:12;;4190:35;;;;;;;;;;;;4184:3;:41;:54;:98;;;;;4281:1;4242:21;:35;4264:12;;4242:35;;;;;;;;;;;;:40;;4184:98;4180:1658;;;4594:19;:33;4614:12;;4594:33;;;;;;;;;;;;;;;;;;;;;4564:13;:27;4578:12;;4564:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;4700:47;4743:3;4700:38;4735:2;4700:16;:30;4717:12;;4700:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;4642:12;:25;4655:11;;4642:25;;;;;;;;;;;:54;4668:13;:27;4682:12;;4668:27;;;;;;;;;;;;;;;;;;;;;4642:54;;;;;;;;;;;;;;;;:105;;;;;;;;;;;4910:1;4875:18;:32;4894:12;;4875:32;;;;;;;;;;;:36;;;;5059:38;5094:2;5059:16;:30;5076:12;;5059:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;5022:16;:34;5054:1;5039:12;;:16;5022:34;;;;;;;;;;;:75;;;;5287:47;5330:3;5287:38;5322:2;5287:16;:30;5304:12;;5287:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;5254:16;:30;5271:12;;5254:30;;;;;;;;;;;:80;;;;5479:17;:31;5497:12;;5479:31;;;;;;;;;;;;5441:17;:35;5474:1;5459:12;;:16;5441:35;;;;;;;;;;;:69;;;;5639:1;5605:17;:31;5623:12;;5605:31;;;;;;;;;;;:35;;;;5814:12;;5770:57;5785:13;:27;5799:12;;5785:27;;;;;;;;;;;;;;;;;;;;;5770:57;;;;;;;;;;;;;;;;;;;;;;4180:1658;5917:1;5908:10;;5904:92;5924:7;;:14;;5920:1;:18;5904:92;;;5959:26;5966:7;;5974:1;5966:10;;;;;;;;;;;;;;;5978:6;5959;:26::i;:::-;5940:3;;;;;;;5904:92;;;6081:17;6091:6;6081:9;:17::i;:::-;6234:28;6255:6;6234:20;:28::i;:::-;6444:36;6473:6;6444:28;:36::i;:::-;6650:38;6681:6;6650:30;:38::i;:::-;6699:13;;:15;;;;;;;;;;;;;6790:21;:29;6812:6;6790:29;;;;;;;;;;;;:32;;;;;;;;;;;;;6942:10;6908:16;:31;6925:13;;6908:31;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;7098:10;7032:24;:32;7057:6;7032:32;;;;;;;;;;;:63;7065:21;:29;7087:6;7065:29;;;;;;;;;;;;7032:63;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;3838:3382;;;;:::o;3319:75:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4039:47::-;;;;;;;;;;;;;;;;;:::o;7973:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;377:142:4:-;430:4:9;407:27;;:7;:19;415:10;407:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;399:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:4:4;437:20;;:12;;;;;;;;;;;:20;;;428:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:5;492:12;;:20;;;;;;;;;;;;;;;;;;377:142::o;2604:48:10:-;;;;;;;;;;;;;;;;;:::o;6811:25::-;;;;:::o;3483:68:1:-;;;;;;;;;;;;;:::o;6406:49:10:-;;;;;;;;;;;;;;;;;:::o;7624:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2126:883:1:-;2201:19;2303:15;2391:21;430:4:9;407:27;;:7;:19;415:10;407:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;399:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:6:1;2230:8;2223:16;;;;;;;;;;;;;;;;;;;;2201:38;;2267:5;:16;;;;;;;;;;;;2266:17;2258:26;;;;;;;;2321:5;:13;;;;;;;;;;;;2303:31;;2415:18;:27;2434:7;2415:27;;;;;;;;;;;;;;;;2391:51;;2575:1;2545:18;:27;2564:7;2545:27;;;;;;;;;;;;;;;:31;;;;2674:7;:16;;:34;2691:16;2674:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2674:34:1;2895:3;2856:27;:36;2884:7;2856:36;;;;;;;;;;;;;;;:42;;;;2951:16;2941:8;2932:7;2913:55;;;;;;;;;;;;2998:4;2979:5;:16;;;:23;;;;;;;;;;;;;;;;;;2126:883;;;;:::o;228:143:4:-;430:4:9;407:27;;:7;:19;415:10;407:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;399:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:5:4;287:21;;:12;;;;;;;;;;;:21;;;278:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:4;345:12;;:19;;;;;;;;;;;;;;;;;;228:143::o;396:71:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8252:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1191:46::-;;;;;;;;;;;;;;;;;:::o;5839:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1526:19:1:-;;;;:::o;7395:41:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3718:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1746:54::-;;;;;;;;;;;;;;;;;:::o;1581:539:1:-;1905:14;;:::i;:::-;1821:1;1787:18;:30;1806:10;1787:30;;;;;;;;;;;;;;;;:35;;1779:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:14;1893:1;1881:7;;:11;;:14;;;;:::i;:::-;1871:7;:24;;;;1936:7;;1929:1;:4;;:14;;;;;1965:10;1953:1;:9;;:22;;;;;;;;;;;2000:5;1985:1;:12;;:20;;;;;;;;;;;2029:3;2015:1;:11;;:17;;;;;2042:6;2054:1;2042:14;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2042:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:3;2100:7;;2088:10;2071:42;;;;;;;;;;;;1581:539;:::o;4177:51:10:-;;;;;;;;;;;;;;;;;:::o;270:88:9:-;824:9:12;:7;:9::i;:::-;816:18;;;;;;;;347:4:9;331:7;:13;339:4;331:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;270:88;:::o;1273:127:12:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1402:51:10:-;;;;;;;;;;;;;;;;;:::o;1603:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;2110:131:2:-;2169:4;2192:20;:34;2213:12;;2192:34;;;;;;;;;;;:42;2227:6;2192:42;;;;;;;;;;;;2185:49;;2110:131;;;:::o;5329:43:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;5561:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6722:24::-;;;;:::o;601:88:9:-;430:4;407:27;;:7;:19;415:10;407:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;399:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:5;655:7;:19;663:10;655:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;601:88::o;639:70:12:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;7239:51:10:-;;;;;;;;;;;;;;;;;:::o;926:83:12:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2785:72:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;877:208:3:-;951:7;917:16;:30;934:12;;917:30;;;;;;;;;;;;:41;;;;;;;;;;;1003:7;968:17;:31;986:12;;968:31;;;;;;;;;;;;:42;;;;;;;;;;;1074:4;1020:34;:48;1055:12;;1020:48;;;;;;;;;;;:51;1069:1;1020:51;;;;;;;;;;;:58;;;;877:208::o;1025:72:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1551:21:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3405:72::-;;;;;;;;;;;;;:::o;7765:58:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2800:1027:2:-;2877:19;2909:15;2981:16;3054:13;3148:6;3212:22;3366:10;2927:24;:32;2952:6;2927:32;;;;;;;;;;;:44;2960:10;2927:44;;;;;;;;;;;;;;;;2909:62;;3000:24;:32;3025:6;3000:32;;;;;;;;;;;:44;3033:10;3000:44;;;;;;;;;;;;;;;;;;;;;;;;;2981:63;;3070:26;:34;3097:6;3070:34;;;;;;;;;;;:46;3105:10;3070:46;;;;;;;;;;;;;;;;3054:62;;3157:1;3148:10;;3143:675;3164:7;:14;3160:1;:18;3143:675;;;3237:60;3293:3;3238:49;3278:8;3272:3;:14;3238:21;:29;3260:6;3238:29;;;;;;;;;;;;:33;;:49;;;;:::i;:::-;3237:55;;:60;;;;:::i;:::-;3212:85;;3343:4;3328:19;;:11;:19;;;3324:144;;;3379:17;3366:30;;3324:144;;;3439:21;:29;3461:6;3439:29;;;;;;;;;;;;3431:37;;3324:144;3502:5;3484:23;;;;3535:5;3521:19;;;;3573:7;3559:10;:21;;3555:240;;;3631:4;3617:18;;3677:7;3664:10;:20;;;;;;;;3653:31;;3737:8;3723:10;:22;;3719:61;;;3778:2;3767:13;;3719:61;3555:240;3180:3;;;;;;;3143:675;;;2800:1027;;;;;;;;;;:::o;7525:49:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;7001:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7150:83::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;213:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2984:49::-;;;;;;;;;;;;;;;;;:::o;841:47::-;;;;;;;;;;;;;;;;;:::o;3527:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6535:28::-;;;;:::o;6197:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;3118:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8201:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5433:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4935:77::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6655:27::-;;;;:::o;1561:101:12:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1956:49:10:-;;;;;;;;;;;;;;;;;:::o;1170:25:1:-;;;;:::o;828:51::-;;;;;;;;;;;;;;;;;:::o;6782:23:10:-;;;;:::o;1272:131:11:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;204:381::-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;695:270::-;753:7;846:9;780:1;776;:5;768:14;;;;;;;;862:1;858;:5;;;;;;;;846:17;;959:1;952:8;;695:270;;;;;:::o;7303:4769:2:-;7893:13;7497:23;7513:6;7497:15;:23::i;:::-;7549:1;7539:6;:11;;7531:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:1;7612:6;:11;;7604:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7732:6;7686:20;:34;7707:12;;7686:34;;;;;;;;;;;:42;7721:6;7686:42;;;;;;;;;;;;:52;;7678:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7909:20;:34;7930:12;;7909:34;;;;;;;;;;;:42;7944:6;7909:42;;;;;;;;;;;;7893:58;;8071:6;8026:20;:34;8047:12;;8026:34;;;;;;;;;;;:42;8061:6;8026:42;;;;;;;;;;;:51;;;;8227:8;8179:23;:37;8203:12;;8179:37;;;;;;;;;;;:45;8217:6;8179:45;;;;;;;;;;;:56;;;;8431:3;8393:21;:35;8415:12;;8393:35;;;;;;;;;;;:41;;;;8641:10;8605:19;:33;8625:12;;8605:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;8874:1;8813:34;:48;8848:12;;8813:48;;;;;;;;;;;:58;8862:8;8813:58;;;;;;;;;;;;:62;8809:207;;;8951:65;9014:1;8951:34;:48;8986:12;;8951:48;;;;;;;;;;;:58;9000:8;8951:58;;;;;;;;;;;;:62;;:65;;;;:::i;:::-;8890:34;:48;8925:12;;8890:48;;;;;;;;;;;:58;8939:8;8890:58;;;;;;;;;;;:126;;;;8809:207;9205:63;9266:1;9205:34;:48;9240:12;;9205:48;;;;;;;;;;;:56;9254:6;9205:56;;;;;;;;;;;;:60;;:63;;;;:::i;:::-;9146:34;:48;9181:12;;9146:48;;;;;;;;;;;:56;9195:6;9146:56;;;;;;;;;;;:122;;;;9488:40;9526:1;9488:19;:33;9508:12;;9488:33;;;;;;;;;;;;:37;;:40;;;;:::i;:::-;9452:19;:33;9472:12;;9452:33;;;;;;;;;;;:76;;;;9589:3;9540:24;:38;9565:12;;9540:38;;;;;;;;;;;:46;9579:6;9540:46;;;;;;;;;;;:52;;;;9603:13;:26;9617:11;;9603:26;;;;;;;;;;;:38;9630:10;9603:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;9653:14;:27;9668:11;;9653:27;;;;;;;;;;;:35;9681:6;9653:35;;;;;;;;;;;:47;9689:10;9653:47;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;9904:72;9974:1;9904:24;:32;9929:6;9904:32;;;;;;;;;;;:65;9937:23;:31;9961:6;9937:31;;;;;;;;;;;;9904:65;;;;;;;;;;;;:69;;:72;;;;:::i;:::-;9836:24;:32;9861:6;9836:32;;;;;;;;;;;:65;9869:23;:31;9893:6;9869:31;;;;;;;;;;;;9836:65;;;;;;;;;;;:140;;;;10155:6;10114:24;:38;10139:12;;10114:38;;;;;;;;;;;:47;;;;10358:12;;10346:10;10324:52;;10330:6;10324:52;10338:6;10372:3;10324:52;;;;;;;;;;;;;;;;;;;;;;;;10605:12;;10575:15;:27;10591:10;10575:27;;;;;;;;;;;;;;;:42;;;;10871:5;10811:34;:48;10846:12;;10811:48;;;;;;;;;;;:56;10860:6;10811:56;;;;;;;;;;;;:65;10807:1259;;;11004:6;10968:19;:33;10988:12;;10968:33;;;;;;;;;;;:42;;;;11140:19;:33;11160:12;;11140:33;;;;;;;;;;;;;;;;;;;;;11110:13;:27;11124:12;;11110:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;11253:48;11297:3;11253:39;11289:2;11253:17;:31;11271:12;;11253:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;11195:12;:25;11208:11;;11195:25;;;;;;;;;;;:54;11221:13;:27;11235:12;;11221:27;;;;;;;;;;;;;;;;;;;;;11195:54;;;;;;;;;;;;;;;;:106;;;;;;;;;;;11351:1;11316:18;:32;11335:12;;11316:32;;;;;;;;;;;:36;;;;11602:48;11646:3;11602:39;11638:2;11602:17;:31;11620:12;;11602:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;11568:17;:31;11586:12;;11568:31;;;;;;;;;;;:82;;;;11702:16;:30;11719:12;;11702:30;;;;;;;;;;;;11665:16;:34;11697:1;11682:12;;:16;11665:34;;;;;;;;;;;:67;;;;11862:1;11829:16;:30;11846:12;;11829:30;;;;;;;;;;;:34;;;;12010:12;;11965:58;11981:13;:27;11995:12;;11981:27;;;;;;;;;;;;;;;;;;;;;11965:58;;;;;;;;;;;;;;;;;;;;;;12040:15;:13;:15::i;:::-;10807:1259;7303:4769;;;:::o;12139:702::-;12247:78;12298:26;12320:3;12298:17;12312:2;12298:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;12247:24;:38;12272:12;;12247:38;;;;;;;;;;;:46;12286:6;12247:46;;;;;;;;;;;;:50;;:78;;;;:::i;:::-;12198:24;:38;12223:12;;12198:38;;;;;;;;;;;:46;12237:6;12198:46;;;;;;;;;;;:127;;;;12429:63;12465:26;12487:3;12465:17;12479:2;12465:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;12429:17;:31;12447:12;;12429:31;;;;;;;;;;;;:35;;:63;;;;:::i;:::-;12395:17;:31;12413:12;;12395:31;;;;;;;;;;;:97;;;;12599:62;12634:26;12656:3;12634:17;12648:2;12634:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;12599:16;:30;12616:12;;12599:30;;;;;;;;;;;;:34;;:62;;;;:::i;:::-;12566:16;:30;12583:12;;12566:30;;;;;;;;;;;:95;;;;12788:45;12806:26;12828:3;12806:17;12820:2;12806:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;12788:13;;:17;;:45;;;;:::i;:::-;12772:13;:61;;;;12139:702;:::o;3799:942:1:-;4120:64;4153:30;4179:3;4153:21;4171:2;4153:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;4120:18;:28;4139:8;;;;;;;;;;;4120:28;;;;;;;;;;;;;;;;:32;;:64;;;;:::i;:::-;4089:18;:28;4108:8;;;;;;;;;;;4089:28;;;;;;;;;;;;;;;:95;;;;4340:30;4366:3;4340:21;4358:2;4340:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;4296:18;:40;4315:12;:20;4328:6;4315:20;;;;;;;;;;;;;;;;;;;;;4296:40;;;;;;;;;;;;;;;;:74;;;;;;;;;;;4521:30;4547:3;4521:21;4539:2;4521:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;4485:18;:32;4504:12;;;;;;;;;;;4485:32;;;;;;;;;;;;;;;;:66;;;;;;;;;;;3799:942;:::o;1094:278:6:-;1221:9;1173:24;:32;1198:6;1173:32;;;;;;;;;;;:44;1206:10;1173:44;;;;;;;;;;;;;;;;:57;;;;;;;;;;;1293:7;1245:24;:32;1270:6;1245:32;;;;;;;;;;;:44;1278:10;1245:44;;;;;;;;;;;;;;;;:55;;1241:124;;;1361:4;1314:24;:32;1339:6;1314:32;;;;;;;;;;;:44;1347:10;1314:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1241:124;1094:278;:::o;366:508::-;625:7;578:24;:32;603:6;578:32;;;;;;;;;;;:44;611:10;578:44;;;;;;;;;;;;;;;;:54;;;;;;;;529:26;:34;556:6;529:34;;;;;;;;;;;:46;564:10;529:46;;;;;;;;;;;;;;;:103;;;;785:8;737:24;:32;762:6;737:32;;;;;;;;;;;:44;770:10;737:44;;;;;;;;;;;;;;;;:56;;733:125;;;856:2;807:26;:34;834:6;807:34;;;;;;;;;;;:46;842:10;807:46;;;;;;;;;;;;;;;:51;;;;733:125;366:508;:::o;1796:169:12:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;912:2525:7:-;1291:17;1469;1169:11;1095:25;:33;1121:6;1095:33;;;;;;;;;;;:70;1163:1;1129:23;:31;1153:6;1129:31;;;;;;;;;;;;:35;1095:70;;;;;;;;;;;;1089:3;:76;:91;;1085:2346;;;1311:24;:32;1336:6;1311:32;;;;;;;;;;;:65;1344:23;:31;1368:6;1344:31;;;;;;;;;;;;1311:65;;;;;;;;;;;;1291:85;;1489:38;1525:1;1489:23;:31;1513:6;1489:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;1469:58;;1756:5;1707:54;;:23;:31;1731:6;1707:31;;;;;;;;;;;:45;1739:12;1707:45;;;;;;;;;;;;;;;;;;;;;:54;;;1703:573;;;1985:33;2005:12;1985:15;;:19;;:33;;;;:::i;:::-;1936:24;:32;1961:6;1936:32;;;;;;;;;;;:46;1969:12;1936:46;;;;;;;;;;;:82;;;;2186:3;2134:27;:35;2162:6;2134:35;;;;;;;;;;;:49;2170:12;2134:49;;;;;;;;;;;:55;;;;2257:4;2209:23;:31;2233:6;2209:31;;;;;;;;;;;:45;2241:12;2209:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1703:573;2375:1;2306:24;:32;2331:6;2306:32;;;;;;;;;;;:65;2339:23;:31;2363:6;2339:31;;;;;;;;;;;;2306:65;;;;;;;;;;;;:70;2302:499;;;2552:24;2569:6;2552:16;:24::i;:::-;2783:3;2714:25;:33;2740:6;2714:33;;;;;;;;;;;:66;2748:23;:31;2772:6;2748:31;;;;;;;;;;;;2714:66;;;;;;;;;;;:72;;;;2302:499;3008:1;2939:24;:32;2964:6;2939:32;;;;;;;;;;;:65;2972:23;:31;2996:6;2972:31;;;;;;;;;;;;2939:65;;;;;;;;;;;;:70;2935:486;;;3190:21;:29;3212:6;3190:29;;;;;;;;;;;;3162:17;:25;3180:6;3162:25;;;;;;;;;;;:57;;;;3394:12;3360:23;:31;3384:6;3360:31;;;;;;;;;;;:46;;;;2935:486;1085:2346;912:2525;;;:::o;1078:131:11:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;2150:854:0:-;2323:15;2405:11;2460:6;180:5:4;164:21;;:12;;;;;;;;;;;:21;;;156:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:5:0;2213:37;;:15;:28;2229:11;;2213:28;;;;;;;;;;;;;;;;;;;;;:37;;;2205:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:47;2361:19;:33;2381:12;;2361:33;;;;;;;;;;;;2348:12;:47::i;:::-;2419:6;:19;2426:11;;2419:19;;;;;;;;;;;:26;;;;2405:40;;2469:1;2460:10;;2455:217;2476:6;2472:1;:10;2455:217;;;2513:6;:19;2520:11;;2513:19;;;;;;;;;;;2533:1;2513:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:32;;2590:1;2552:12;:25;2565:11;;2552:25;;;;;;;;;;;:34;2578:7;2552:34;;;;;;;;;;;;;;;;:39;;2549:112;;;2609:7;:16;;:52;2626:12;:25;2639:11;;2626:25;;;;;;;;;;;:34;2652:7;2626:34;;;;;;;;;;;;;;;;2609:52;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2609:52:0;2549:112;2484:3;;;;;;;2455:217;;;2712:4;2681:15;:28;2697:11;;2681:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2760:11;;2746:12;;2731:70;2773:13;:27;2787:12;;2773:27;;;;;;;;;;;;;;;;;;;;;2731:70;;;;;;;;;;;;;;;;;;;;;;2826:19;2843:1;2826:12;;:16;;:19;;;;:::i;:::-;2811:12;:34;;;;2902:18;2918:1;2902:11;;:15;;:18;;;;:::i;:::-;2888:11;:32;;;;2150:854;;;:::o;193:467:3:-;425:43;464:3;425:34;455:3;425:17;:25;443:6;425:25;;;;;;;;;;;;:29;;:34;;;;:::i;:::-;:38;;:43;;;;:::i;:::-;393:21;:29;415:6;393:29;;;;;;;;;;;:75;;;;627:17;:25;645:6;627:25;;;;;;;;;;;;610:43;;;;;;;;;;193:467;:::o;1480:664:0:-;1540:11;1591:15;1616:23;1705:6;1554:27;1568:12;1554:13;:27::i;:::-;1540:41;;1714:1;1705:10;;1700:177;1721:6;1717:1;:10;1700:177;;;1758:6;:19;1765:11;;1758:19;;;;;;;;;;;1778:1;1758:22;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:32;;1816:14;:27;1831:11;;1816:27;;;;;;;;;;;:41;1844:12;1816:41;;;;;;;;;;;:50;1858:7;1816:50;;;;;;;;;;;;;;;;1794:72;;;;1729:3;;;;;;;1700:177;;;1896:1;1892:5;;1887:250;1903:6;1899:1;:10;1887:250;;;1940:6;:19;1947:11;;1940:19;;;;;;;;;;;1960:1;1940:22;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:32;;2013:113;2107:18;2014:87;2069:17;:31;2087:12;;2069:31;;;;;;;;;;;;2014:14;:27;2029:11;;2014:27;;;;;;;;;;;:41;2042:12;2014:41;;;;;;;;;;;:50;2056:7;2014:50;;;;;;;;;;;;;;;;:54;;:87;;;;:::i;:::-;2013:93;;:113;;;;:::i;:::-;1976:12;:25;1989:11;;1976:25;;;;;;;;;;;:34;2002:7;1976:34;;;;;;;;;;;;;;;:150;;;;1911:3;;;;;;;1887:250;;;1480:664;;;;;:::o;513:957::-;572:4;602:6;674:23;611:21;:35;633:12;611:35;;;;;;;;;;;;602:44;;597:824;652:1;648;:5;597:824;;;782:5;715:72;;:7;:20;723:11;;715:20;;;;;;;;;;;:63;736:24;:38;761:12;736:38;;;;;;;;;;;:41;775:1;736:41;;;;;;;;;;;;;;;;;;;;;715:63;;;;;;;;;;;;;;;;;;;;;;;;;:72;;;711:700;;;866:3;828:21;:35;850:12;828:35;;;;;;;;;;;;:41;824:319;;;919:3;897:18;:25;;893:63;;;951:5;;893:63;824:319;;;1058:21;:35;1080:12;1058:35;;;;;;;;;;;;1036:18;:57;;1032:92;;;1119:5;;1032:92;824:319;1177:6;:19;1184:11;;1177:19;;;;;;;;;;;1202:24;:38;1227:12;1202:38;;;;;;;;;;;:41;1241:1;1202:41;;;;;;;;;;;;;;;;;;;;;1177:67;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1177:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:25;1306:1;1283:18;:22;;:25;;;;:::i;:::-;1262:46;;1392:4;1326:7;:20;1334:11;;1326:20;;;;;;;;;;;:63;1347:24;:38;1372:12;1347:38;;;;;;;;;;;:41;1386:1;1347:41;;;;;;;;;;;;;;;;;;;;;1326:63;;;;;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;711:700;655:3;;;;;;;;597:824;;;1437:6;:19;1444:11;;1437:19;;;;;;;;;;;:26;;;;1430:33;;513:957;;;;;:::o;48:1040:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./Game.sol\";\n\ncontract GameMock is Game {\n\n    //функция обновления цены вызова функции закрашивания (paint)\n    function _updateCallPrice(uint _color) private {\n        \n        //увеличиваем цену вызова на 5% (используем для отображения на фронте)\n        nextCallPriceForColor[_color] = callPriceForColor[_color].mul(105).div(100);\n        \n        //вызываем ивент о том, что цена вызова функции paint обновлена\n        emit CallPriceUpdated(callPriceForColor[_color]);\n    }\n\n    function hardCode() external {\n        timeBankForRound[currentRound] = 1 ether;\n        colorBankForRound[currentRound] = 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n    function hardCode2() external {\n        timeBankForRound[currentRound] += 1 ether;\n        colorBankForRound[currentRound] += 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n}",
  "sourcePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
  "ast": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1509
      ]
    },
    "id": 1510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1431,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1432,
        "nodeType": "ImportDirective",
        "scope": 1510,
        "sourceUnit": 1430,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1433,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1429,
              "src": "69:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1429",
                "typeString": "contract Game"
              }
            },
            "id": 1434,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:3"
          }
        ],
        "contractDependencies": [
          302,
          557,
          1429,
          1562,
          1661,
          1827,
          2096,
          2349,
          2586
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1509,
        "linearizedBaseContracts": [
          1509,
          1429,
          557,
          1661,
          1827,
          302,
          1562,
          2096,
          2586,
          2349
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "240:420:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1439,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "393:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1441,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1440,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "415:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "393:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "464:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "455:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1442,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2203,
                                "src": "425:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1444,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1443,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "443:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "425:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2384,
                            "src": "425:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2408,
                        "src": "425:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "425:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "393:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "393:75:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1454,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2203,
                          "src": "627:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1456,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "645:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1453,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "610:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "605:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 1460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "219:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "218:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:3"
            },
            "scope": 1509,
            "src": "193:467:3",
            "stateMutability": "nonpayable",
            "superFunction": 1700,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "695:176:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1463,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "705:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1464,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "722:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "705:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "738:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "705:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1468,
                  "nodeType": "ExpressionStatement",
                  "src": "705:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "755:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1471,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1470,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "773:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "755:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "755:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "755:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "806:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1478,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1476,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "841:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "806:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1479,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "806:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "806:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "806:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 1484,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:3"
            },
            "scope": 1509,
            "src": "666:205:3",
            "stateMutability": "nonpayable",
            "superFunction": 739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1507,
              "nodeType": "Block",
              "src": "907:178:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "917:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "934:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "917:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "917:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "917:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "968:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "986:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "968:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "968:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "968:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1499,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "1020:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1502,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "1055:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1503,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1020:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 1508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:3"
            },
            "scope": 1509,
            "src": "877:208:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1510,
        "src": "48:1040:3"
      }
    ],
    "src": "0:1088:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1509
      ]
    },
    "id": 1510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1431,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1432,
        "nodeType": "ImportDirective",
        "scope": 1510,
        "sourceUnit": 1430,
        "src": "26:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1433,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1429,
              "src": "69:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1429",
                "typeString": "contract Game"
              }
            },
            "id": 1434,
            "nodeType": "InheritanceSpecifier",
            "src": "69:4:3"
          }
        ],
        "contractDependencies": [
          302,
          557,
          1429,
          1562,
          1661,
          1827,
          2096,
          2349,
          2586
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1509,
        "linearizedBaseContracts": [
          1509,
          1429,
          557,
          1661,
          1827,
          302,
          1562,
          2096,
          2586,
          2349
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1459,
              "nodeType": "Block",
              "src": "240:420:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1439,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "393:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1441,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1440,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "415:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "393:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "464:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "455:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1442,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2203,
                                "src": "425:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1444,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1443,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1436,
                                "src": "443:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "425:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2384,
                            "src": "425:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "425:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2408,
                        "src": "425:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "425:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "393:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "393:75:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1454,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2203,
                          "src": "627:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1456,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1455,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "645:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "627:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1453,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "610:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1458,
                  "nodeType": "EmitStatement",
                  "src": "605:48:3"
                }
              ]
            },
            "documentation": null,
            "id": 1460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "219:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "218:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:3"
            },
            "scope": 1509,
            "src": "193:467:3",
            "stateMutability": "nonpayable",
            "superFunction": 1700,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1483,
              "nodeType": "Block",
              "src": "695:176:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1463,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "705:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1464,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "722:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "705:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "738:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "705:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1468,
                  "nodeType": "ExpressionStatement",
                  "src": "705:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1469,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "755:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1471,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1470,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "773:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "755:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "789:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "755:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1474,
                  "nodeType": "ExpressionStatement",
                  "src": "755:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "806:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1478,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1476,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "841:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "806:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1479,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "855:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "806:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "860:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "806:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "806:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 1484,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:3"
            },
            "scope": 1509,
            "src": "666:205:3",
            "stateMutability": "nonpayable",
            "superFunction": 739,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1507,
              "nodeType": "Block",
              "src": "907:178:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "917:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "934:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "917:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "917:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "917:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1493,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "968:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1495,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1494,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2268,
                        "src": "986:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "968:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:7:3",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "968:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1498,
                  "nodeType": "ExpressionStatement",
                  "src": "968:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1499,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "1020:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1502,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1500,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2268,
                          "src": "1055:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1503,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1020:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1506,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 1508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:3"
            },
            "scope": 1509,
            "src": "877:208:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1510,
        "src": "48:1040:3"
      }
    ],
    "src": "0:1088:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xf4504425334ab8fed679596913531c18324c65ff",
      "transactionHash": "0x0cca16c12e9e7c1de338d71b9a2c29f40c114268a737b97a3eed370aa01dba7d"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-04T19:25:42.619Z"
}