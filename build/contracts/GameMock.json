{
  "contractName": "GameMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isGamePaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInTBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkToUser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToTotalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToPaintedPixelsAmountForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        },
        {
          "name": "_refLink",
          "type": "string"
        }
      ],
      "name": "paint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerOfRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasReferrer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentPaintGenForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPlayedRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moneySpentByUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToTBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToStartTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToCBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paintsCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "newUserToCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainterForColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToOldColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isTBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToRefLink",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenStartedForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintedPixelForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nextCallPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPainterForRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixel",
          "type": "uint256"
        }
      ],
      "name": "getPixelColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefLink",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "referrerToReferrals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintsCounterForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "claimer",
          "type": "address"
        },
        {
          "name": "isResolved",
          "type": "bool"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerOfPixel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInCBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pixels",
          "type": "uint256[]"
        },
        {
          "name": "_color",
          "type": "uint256"
        }
      ],
      "name": "estimateCallPrice",
      "outputs": [
        {
          "name": "totalCallPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "colorBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToEndTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniqueUsersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToAmountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isCBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralToReferrer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPaintsInPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dividendsBank",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "cbIteration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "CBPDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DividendsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "currentTime",
          "type": "uint256"
        }
      ],
      "name": "DividendsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "pixelId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "colorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "painter",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Paint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "ColorBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "TimeBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCallPrice",
          "type": "uint256"
        }
      ],
      "name": "CallPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "tbIteration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "TBPDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "hardCode2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061034e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630422ddf31461035357806305bdd0be14610382578063099b81ce146103e75780630ba36221146104585780630baaea44146104a35780630cf9603f146105105780630daa42061461055b5780630f6ed86e146105ab578063102f9713146105d657806318452cd8146106435780631f5bdf5d1461069e5780631f90c6ed146106f957806324d7806c1461075e57806328361f57146107b957806328b290f9146107fa5780632c6c1c41146108515780632c7a3dae146108b257806333f9c3881461092957806334d34b9b1461098a5780633a173505146109a15780633c6dd013146109ec5780633ca4c18314610a2d5780633d0d1a7914610a8e5780633dc3c37714610acf578063411b007e14610afa57806341c5464e14610b5157806342e453ec14610ba85780634b39173d14610c1f5780634c438ad714610c6a5780634c78e40114610caf5780635bfcdb2714610cf05780635c25fd1314610dac5780635d63ebb214610dd75780635f5d554c14610e4e578063628a71a314610e9d5780636f17eb4214610ede578063715018a614610f1f57806373a9ee2614610f3657806379ecf37614610f775780637b68a8f014610fe45780637e1e175c1461102557806387982ac3146110805780638a19c8bc1461110d5780638da5cb5b146111385780638e2df39c1461118f5780638f32d59b146111d05780638f63b7e5146111ff578063954226dc1461124a578063a312072414611261578063a888c2cd146112ac578063a977e16814611332578063ab24c7d214611389578063abafb90e146113ee578063ae55ce8214611472578063b0ff59d2146114df578063b1a3883c14611540578063b8232d5d146115ab578063be7d6226146115f6578063c64a2e5614611637578063c957387b14611678578063c9f8234f146116c3578063d4526e68146116ee578063d5de47c714611737578063da68b12114611782578063deaf0fa1146117c7578063eaf1c9101461184a578063eef565da146118ab578063f2fde38b146118d6578063f49916f514611919578063f5f95b3b1461195a578063fb454d2914611985578063fea11fe3146119dc575b600080fd5b34801561035f57600080fd5b50610368611a07565b604051808215151515815260200191505060405180910390f35b34801561038e57600080fd5b506103cd60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a1a565b604051808215151515815260200191505060405180910390f35b3480156103f357600080fd5b506104166004803603810190808035600019169060200190929190505050611a49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046457600080fd5b5061048d6004803603810190808035906020019092919080359060200190929190505050611a7c565b6040518082815260200191505060405180910390f35b3480156104af57600080fd5b506104ce60048036038101908080359060200190929190505050611aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051c57600080fd5b506105456004803603810190808035906020019092919080359060200190929190505050611ad4565b6040518082815260200191505060405180910390f35b6105a960048036038101908080359060200190820180359060200191909192939192939080359060200190929190803590602001908201803590602001919091929391929390505050611af9565b005b3480156105b757600080fd5b506105c0612427565b6040518082815260200191505060405180910390f35b3480156105e257600080fd5b506106016004803603810190808035906020019092919050505061242d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064f57600080fd5b50610684600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612460565b604051808215151515815260200191505060405180910390f35b3480156106aa57600080fd5b506106df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612480565b604051808215151515815260200191505060405180910390f35b34801561070557600080fd5b5061074460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124a0565b604051808215151515815260200191505060405180910390f35b34801561076a57600080fd5b5061079f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124cf565b604051808215151515815260200191505060405180910390f35b3480156107c557600080fd5b506107e4600480360381019080803590602001909291905050506124ef565b6040518082815260200191505060405180910390f35b34801561080657600080fd5b5061083b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612507565b6040518082815260200191505060405180910390f35b34801561085d57600080fd5b5061089c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061251f565b6040518082815260200191505060405180910390f35b3480156108be57600080fd5b506108e76004803603810190808035906020019092919080359060200190929190505050612544565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093557600080fd5b5061097460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612591565b6040518082815260200191505060405180910390f35b34801561099657600080fd5b5061099f6125b6565b005b3480156109ad57600080fd5b506109d6600480360381019080803590602001909291908035906020019092919050505061262a565b6040518082815260200191505060405180910390f35b3480156109f857600080fd5b50610a176004803603810190808035906020019092919050505061264f565b6040518082815260200191505060405180910390f35b348015610a3957600080fd5b50610a7860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612667565b6040518082815260200191505060405180910390f35b348015610a9a57600080fd5b50610ab96004803603810190808035906020019092919050505061268c565b6040518082815260200191505060405180910390f35b348015610adb57600080fd5b50610ae46126a4565b6040518082815260200191505060405180910390f35b348015610b0657600080fd5b50610b0f6126aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b5d57600080fd5b50610b92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126d0565b6040518082815260200191505060405180910390f35b348015610bb457600080fd5b50610bdd60048036038101908080359060200190929190803590602001909291905050506126e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c2b57600080fd5b50610c54600480360381019080803590602001909291908035906020019092919050505061272a565b6040518082815260200191505060405180910390f35b348015610c7657600080fd5b50610c956004803603810190808035906020019092919050505061274f565b604051808215151515815260200191505060405180910390f35b348015610cbb57600080fd5b50610cda6004803603810190808035906020019092919050505061276f565b6040518082815260200191505060405180910390f35b348015610cfc57600080fd5b50610d31600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612787565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d71578082015181840152602081019050610d56565b50505050905090810190601f168015610d9e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610db857600080fd5b50610dc1612837565b6040518082815260200191505060405180910390f35b348015610de357600080fd5b50610e0c600480360381019080803590602001909291908035906020019092919050505061283d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e5a57600080fd5b50610e83600480360381019080803590602001909291908035906020019092919050505061288a565b604051808215151515815260200191505060405180910390f35b348015610ea957600080fd5b50610ec8600480360381019080803590602001909291905050506128b9565b6040518082815260200191505060405180910390f35b348015610eea57600080fd5b50610f09600480360381019080803590602001909291905050506128d1565b6040518082815260200191505060405180910390f35b348015610f2b57600080fd5b50610f346128e9565b005b348015610f4257600080fd5b50610f61600480360381019080803590602001909291905050506129bb565b6040518082815260200191505060405180910390f35b348015610f8357600080fd5b50610fa2600480360381019080803590602001909291905050506129d3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ff057600080fd5b5061100f60048036038101908080359060200190929190505050612a06565b6040518082815260200191505060405180910390f35b34801561103157600080fd5b50611066600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a36565b604051808215151515815260200191505060405180910390f35b34801561108c57600080fd5b506110cb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561111957600080fd5b50611122612aa2565b6040518082815260200191505060405180910390f35b34801561114457600080fd5b5061114d612aa8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561119b57600080fd5b506111ba60048036038101908080359060200190929190505050612ad1565b6040518082815260200191505060405180910390f35b3480156111dc57600080fd5b506111e5612ae9565b604051808215151515815260200191505060405180910390f35b34801561120b57600080fd5b506112346004803603810190808035906020019092919080359060200190929190505050612b40565b6040518082815260200191505060405180910390f35b34801561125657600080fd5b5061125f612b65565b005b34801561126d57600080fd5b506112966004803603810190808035906020019092919080359060200190929190505050612beb565b6040518082815260200191505060405180910390f35b3480156112b857600080fd5b506112d760048036038101908080359060200190929190505050612c10565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182815260200194505050505060405180910390f35b34801561133e57600080fd5b50611347612c7c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561139557600080fd5b506113d460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ca2565b604051808215151515815260200191505060405180910390f35b3480156113fa57600080fd5b5061145c6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929080359060200190929190505050612cd1565b6040518082815260200191505060405180910390f35b34801561147e57600080fd5b5061149d60048036038101908080359060200190929190505050612ebf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156114eb57600080fd5b5061152a60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ef2565b6040518082815260200191505060405180910390f35b34801561154c57600080fd5b506115956004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f17565b6040518082815260200191505060405180910390f35b3480156115b757600080fd5b506115e06004803603810190808035906020019092919080359060200190929190505050612f49565b6040518082815260200191505060405180910390f35b34801561160257600080fd5b5061162160048036038101908080359060200190929190505050612f6e565b6040518082815260200191505060405180910390f35b34801561164357600080fd5b5061166260048036038101908080359060200190929190505050612f86565b6040518082815260200191505060405180910390f35b34801561168457600080fd5b506116ad6004803603810190808035906020019092919080359060200190929190505050612f9e565b6040518082815260200191505060405180910390f35b3480156116cf57600080fd5b506116d8612fc3565b6040518082815260200191505060405180910390f35b3480156116fa57600080fd5b5061171d6004803603810190808035600019169060200190929190505050612fc9565b604051808215151515815260200191505060405180910390f35b34801561174357600080fd5b5061176c6004803603810190808035906020019092919080359060200190929190505050612fe9565b6040518082815260200191505060405180910390f35b34801561178e57600080fd5b506117ad6004803603810190808035906020019092919050505061300e565b604051808215151515815260200191505060405180910390f35b3480156117d357600080fd5b50611808600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061302e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561185657600080fd5b5061189560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613061565b6040518082815260200191505060405180910390f35b3480156118b757600080fd5b506118c0613086565b6040518082815260200191505060405180910390f35b3480156118e257600080fd5b50611917600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061308c565b005b34801561192557600080fd5b50611944600480360381019080803590602001909291905050506130ab565b6040518082815260200191505060405180910390f35b34801561196657600080fd5b5061196f6130c3565b6040518082815260200191505060405180910390f35b34801561199157600080fd5b506119c6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130c9565b6040518082815260200191505060405180910390f35b3480156119e857600080fd5b506119f16130e1565b6040518082815260200191505060405180910390f35b604160149054906101000a900460ff1681565b60346020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60236020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e602052816000526040600020602052806000526040600020600091509150505481565b603a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b600082828080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505060008060011515601d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141515611e4a57611b94836130e7565b6fffffffffffffffffffffffffffffffff1916915060246000836000191660001916815260200190815260200160002060009054906101000a900460ff1615611d8f5760236000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050602060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080601f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001602160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b611da5600160265461310090919063ffffffff16565b602681905550602654602560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001601d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60001515604160149054906101000a900460ff161515141515611ed5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f47616d652069732070617573656400000000000000000000000000000000000081525060200191505060405180910390fd5b611f0e89898080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505088612cd1565b34141515611f84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f57726f6e672063616c6c2070726963650000000000000000000000000000000081525060200191505060405180910390fd5b6104b0600a60006028548152602001908152602001600020544203118015611fc257506000600a600060285481526020019081526020016000205414155b156122be57600b6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061208c606461207e602d6009600060285481526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b6036600060295481526020019081526020016000206000600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160106000602854815260200190815260200160002081905550612164600a6009600060285481526020019081526020016000205461315f90919063ffffffff16565b600960006001602854018152602001908152602001600020819055506121bc60646121ae602d6009600060285481526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b6009600060285481526020019081526020016000208190555060076000602854815260200190815260200160002054600760006001602854018152602001908152602001600020819055506000600760006028548152602001908152602001600020819055506028547f20f206bcab56eeef408295aaff8745adb98fed16823d758193e9449983d23fd2600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25b600093505b888890508410156122f9576122ec89898681811015156122df57fe5b9050602002013588613189565b83806001019450506122c3565b61230287613afe565b61230b87613c99565b61231487613edc565b61231d87614008565b602b60008154809291906001019190505550602e6000888152602001908152602001600020600081548092919060010191905055503360316000602b54815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033603260008981526020019081526020016000206000602e60008b815260200190815260200160002054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60295481565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60216020528060005260406000206000915054906101000a900460ff1681565b601d6020528060005260406000206000915054906101000a900460ff1681565b601b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60426020528060005260406000206000915054906101000a900460ff1681565b60176020528060005260406000206000915090505481565b60396020528060005260406000206000915090505481565b601a602052816000526040600020602052806000526040600020600091509150505481565b60306020528160005260406000208181548110151561255f57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6036602052816000526040600020602052806000526040600020600091509150505481565b670de0b6b3a764000060096000602854815260200190815260200160002081905550670de0b6b3a76400006007600060285481526020019081526020016000208190555061270e60066000602854815260200190815260200160002060006002815260200190815260200160002081905550565b6014602052816000526040600020602052806000526040600020600091509150505481565b60186020528060005260406000206000915090505481565b6035602052816000526040600020602052806000526040600020600091509150505481565b60106020528060005260406000206000915090505481565b602b5481565b604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60256020528060005260406000206000915090505481565b60326020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b60386020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60226020528060005260406000206000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561282f5780601f106128045761010080835404028352916020019161282f565b820191906000526020600020905b81548152906001019060200180831161281257829003601f168201915b505050505081565b603e5481565b602f6020528160005260406000208181548110151561285857fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60166020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60196020528060005260406000206000915090505481565b6128f1612ae9565b15156128fc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600a6020528060005260406000206000915090505481565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004600060285481526020019081526020016000206000838152602001908152602001600020549050919050565b601e6020528060005260406000206000915054906101000a900460ff1681565b6020805281600052604060002081815481101515612a7057fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60285481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b602e6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6011602052816000526040600020602052806000526040600020600091509150505481565b670de0b6b3a764000060096000602854815260200190815260200160002060008282540192505081905550670de0b6b3a76400006007600060285481526020019081526020016000206000828254019250508190555061270e60066000602854815260200190815260200160002060006002815260200190815260200160002081905550565b6008602052816000526040600020602052806000526040600020600091509150505481565b603f81815481101515612c1f57fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154905084565b604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60336020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806000806000806000601a600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549550601b600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169450601c600089815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350600092505b8851831015612eb357612e2c6064612e1e86606403601960008d81526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b9150600115158515151415612e4357819050612e5a565b601960008981526020019081526020016000205490505b80870196508086019550670de0b6b3a764000086101515612ea65760019450670de0b6b3a764000086811515612e8c57fe5b049350678ac7230489e8000086101515612ea557600a93505b5b8280600101935050612de7565b50505050505092915050565b60316020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602c602052816000526040600020602052806000526040600020600091509150505481565b602d60205282600052604060002060205281600052604060002060205280600052604060002060009250925050505481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60126020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b6015602052816000526040600020602052806000526040600020600091509150505481565b60265481565b60246020528060005260406000206000915054906101000a900460ff1681565b6013602052816000526040600020602052806000526040600020600091509150505481565b60376020528060005260406000206000915054906101000a900460ff1681565b601f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c602052816000526040600020602052806000526040600020600091509150505481565b60275481565b613094612ae9565b151561309f57600080fd5b6130a88161417b565b50565b600d6020528060005260406000206000915090505481565b603d5481565b603b6020528060005260406000206000915090505481565b602a5481565b6000806060839050602081015191508192505050919050565b600080828401905083811015151561311757600080fd5b8091505092915050565b60008060008414156131365760009150613158565b828402905082848281151561314757fe5b0414151561315457600080fd5b8091505b5092915050565b60008060008311151561317157600080fd5b828481151561317c57fe5b0490508091505092915050565b600061319482614275565b60008314151515613233576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f54686520706978656c2077697468206964203d203020646f6573206e6f74206581526020017f786973742e2e2e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600082141515156132d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f752063616e6e6f74207061696e7420746f207472616e73706172656e742081526020017f636f6c6f722e2e2e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8160046000602854815260200190815260200160002060008581526020019081526020016000205414151515613396576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f5468697320706978656c20697320616c7265616479206f66207468697320636f81526020017f6c6f722e2e2e000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6004600060285481526020019081526020016000206000848152602001908152602001600020549050816004600060285481526020019081526020016000206000858152602001908152602001600020819055508060056000602854815260200190815260200160002060008581526020019081526020016000208190555042600a600060285481526020019081526020016000208190555033600b6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006006600060285481526020019081526020016000206000838152602001908152602001600020541115613517576134ec600160066000602854815260200190815260200160002060008481526020019081526020016000205461451390919063ffffffff16565b6006600060285481526020019081526020016000206000838152602001908152602001600020819055505b613551600160066000602854815260200190815260200160002060008581526020019081526020016000205461310090919063ffffffff16565b6006600060285481526020019081526020016000206000848152602001908152602001600020819055506135a460016012600060285481526020019081526020016000205461310090919063ffffffff16565b6012600060285481526020019081526020016000208190555042601160006028548152602001908152602001600020600085815260200190815260200160002081905550602c6000602954815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550602d6000602a548152602001908152602001600020600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506137086001601360008581526020019081526020016000206000601760008781526020019081526020016000205481526020019081526020016000205461451390919063ffffffff16565b601360008481526020019081526020016000206000601760008681526020019081526020016000205481526020019081526020016000208190555082600c60006028548152602001908152602001600020819055506028543373ffffffffffffffffffffffffffffffffffffffff16847faf2d03aa2fdc9b785775529881274caad1884e0279e02729f03eca55d57eea728542604051808381526020018281526020019250505060405180910390a4602854603960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127106006600060285481526020019081526020016000206000848152602001908152602001600020541415613af95781600d6000602854815260200190815260200160002081905550600b6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600f6000602854815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061390c60646138fe60326007600060285481526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b60356000602a5481526020019081526020016000206000600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506002601060006028548152602001908152602001600020819055506139f760646139e960326007600060285481526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b6007600060285481526020019081526020016000208190555060096000602854815260200190815260200160002054600960006001602854018152602001908152602001600020819055506000600960006028548152602001908152602001600020819055506028547f14988f685a0376db6242cb37ed3033028bbc9e8fe0cc4b434a098e6c0150673f600f6000602854815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25b505050565b613b5d613b286064613b1a60283461312190919063ffffffff16565b61315f90919063ffffffff16565b60086000602854815260200190815260200160002060008481526020019081526020016000205461310090919063ffffffff16565b600860006028548152602001908152602001600020600083815260200190815260200160002081905550613bd5613bb16064613ba360283461312190919063ffffffff16565b61315f90919063ffffffff16565b6007600060285481526020019081526020016000205461310090919063ffffffff16565b60076000602854815260200190815260200160002081905550613c3c613c186064613c0a60283461312190919063ffffffff16565b61315f90919063ffffffff16565b6009600060285481526020019081526020016000205461310090919063ffffffff16565b60096000602854815260200190815260200160002081905550613c90613c7f6064613c7160143461312190919063ffffffff16565b61315f90919063ffffffff16565b603d5461310090919063ffffffff16565b603d8190555050565b613d35613cc56064613cb76019603d5461312190919063ffffffff16565b61315f90919063ffffffff16565b603b6000604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461310090919063ffffffff16565b603b6000604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613dc36064613db56019603d5461312190919063ffffffff16565b61315f90919063ffffffff16565b603b6000603a600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550613e6b6064613e5d6019603d5461312190919063ffffffff16565b61315f90919063ffffffff16565b603b6000604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b34601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550670de0b6b3a7640000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515614005576001601b600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b670de0b6b3a7640000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481151561406b57fe5b04601c600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550678ac7230489e80000601a600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561417857600a601c600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156141b757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080605a6015600085815260200190815260200160002060006001601760008881526020019081526020016000205403815260200190815260200160002054420310151561450e576013600084815260200190815260200160002060006017600086815260200190815260200160002054815260200190815260200160002054915061431f6001601760008681526020019081526020016000205461310090919063ffffffff16565b90506000151560166000858152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615151415614403576143748260275461451390919063ffffffff16565b601360008581526020019081526020016000206000838152602001908152602001600020819055504260146000858152602001908152602001600020600083815260200190815260200160002081905550600160166000858152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6001601360008581526020019081526020016000206000601760008781526020019081526020016000205481526020019081526020016000205414156144895761444c83614534565b4260156000858152602001908152602001600020600060176000878152602001908152602001600020548152602001908152602001600020819055505b60006013600085815260200190815260200160002060006017600087815260200190815260200160002054815260200190815260200160002054141561450d57601960008481526020019081526020016000205460186000858152602001908152602001600020819055508060176000858152602001908152602001600020819055505b5b505050565b60008083831115151561452557600080fd5b82840390508091505092915050565b61456e60646145606069601860008681526020019081526020016000205461312190919063ffffffff16565b61315f90919063ffffffff16565b601960008381526020019081526020016000208190555060186000828152602001908152602001600020547f3bb22f778670a5901bff4d41c425858dac1ea6aeb048d40f959a6bc43f98506160405160405180910390a2505600a165627a7a723058207b5ef272cab702cbaa5cca3d309148ab6de2a36f7068c8b9c2246284e73827630029",
  "sourceMap": "47:1040:4:-;;;9898:42:19;9868:72;;;;;;;;;;;;;;;;;;;;9972:42;9946:68;;;;;;;;;;;;;;;;;;;;518:10:11;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;47:1040:4;;;;;;",
  "deployedSourceMap": "47:1040:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10021:24:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10021:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;8108:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8108:58:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5978:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5978:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2192:74:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8821:45:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:82:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:3420:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6761:23:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6761:23:19;;;;;;;;;;;;;;;;;;;;;;;2341:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2341:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5669:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5669:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5050:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4672:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4672:75:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10056:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10056:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3879:53:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8733:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8733:48:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4360:75:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7606:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7606:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8342:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8342:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:205:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:205:4;;;;;;3282:75:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3282:75:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4002:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4002:47:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8223:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8223:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2568:48:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6959:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6959:25:19;;;;;;;;;;;;;;;;;;;;;;;9946:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9946:68:19;;;;;;;;;;;;;;;;;;;;;;;;;;;6367:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6367:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7823:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7823:75:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:71:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8570:45:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1155:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5800:48:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5800:48:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9505:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9505:19:19;;;;;;;;;;;;;;;;;;;;;;;7510:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7510:41:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3681:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3681:71:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1710:54:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4140:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:11;;;;;;1366:51:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1567:52:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:131:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:131:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:43:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5290:43:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5522:57:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6681:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6681:24:19;;;;;;;;;;;;;;;;;;;;;;;639:70:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:51:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7404:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:72:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2749:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:208:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:208:4;;;;;;989:72:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9531:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9531:21:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9868:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9868:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;7974:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7974:58:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:1019:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:1019:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7703:49:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7703:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7061:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7061:64:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7211:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7211:83:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:68:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2947:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;805:47:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3490:73:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6496:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6496:28:19;;;;;;;;;;;;;;;;;;;;;;;6158:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6158:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3081:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3081:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8467:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8467:45:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5394:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5394:54:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:77:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6615:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6615:27:19;;;;;;;;;;;;;;;;;;;;;;;1561:101:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:49:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1920:49:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9356:25:19;;;;;;;;;;;;;;;;;;;;;;;9014:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9014:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6836:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6836:23:19;;;;;;;;;;;;;;;;;;;;;;;10021:24;;;;;;;;;;;;;:::o;8108:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5978:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;2192:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8821:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;637:82::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1590:3420:3:-;3698:6;1681:8;;11825:819;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12017:15;12224:16;11997:4;11965:36;;:16;:28;11982:10;11965:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;11961:666;;;12035:25;12051:8;12035:15;:25::i;:::-;12017:43;;;;;12181:13;:22;12195:7;12181:22;;;;;;;;;;;;;;;;;;;;;;;;;;;12177:274;;;12243:13;:22;12257:7;12243:22;;;;;;;;;;;;;;;;;;;;;;;;;;;12224:41;;12283:19;:29;12303:8;12283:29;;;;;;;;;;;;;;;12318:10;12283:46;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;12283:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12380:8;12347:18;:30;12366:10;12347:30;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;12432:4;12406:11;:23;12418:10;12406:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;12177:274;12483:23;12504:1;12483:16;;:20;;:23;;;;:::i;:::-;12464:16;:42;;;;12551:16;;12520;:28;12537:10;12520:28;;;;;;;;;;;;;;;:47;;;;12612:4;12581:16;:28;12598:10;12581:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;11961:666;323:5:10;307:21;;:12;;;;;;;;;;;:21;;;299:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1736:34:3;1754:7;;1736:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1763:6;1736:17;:34::i;:::-;1723:9;:47;1715:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:10;1979:21;:35;2001:12;;1979:35;;;;;;;;;;;;1973:3;:41;:54;:98;;;;;2070:1;2031:21;:35;2053:12;;2031:35;;;;;;;;;;;;:40;;1973:98;1969:1658;;;2383:19;:33;2403:12;;2383:33;;;;;;;;;;;;;;;;;;;;;2353:13;:27;2367:12;;2353:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;2489:47;2532:3;2489:38;2524:2;2489:16;:30;2506:12;;2489:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;2431:12;:25;2444:11;;2431:25;;;;;;;;;;;:54;2457:13;:27;2471:12;;2457:27;;;;;;;;;;;;;;;;;;;;;2431:54;;;;;;;;;;;;;;;;:105;;;;;;;;;;;2699:1;2664:18;:32;2683:12;;2664:32;;;;;;;;;;;:36;;;;2848:38;2883:2;2848:16;:30;2865:12;;2848:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;2811:16;:34;2843:1;2828:12;;:16;2811:34;;;;;;;;;;;:75;;;;3076:47;3119:3;3076:38;3111:2;3076:16;:30;3093:12;;3076:30;;;;;;;;;;;;:34;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;3043:16;:30;3060:12;;3043:30;;;;;;;;;;;:80;;;;3268:17;:31;3286:12;;3268:31;;;;;;;;;;;;3230:17;:35;3263:1;3248:12;;:16;3230:35;;;;;;;;;;;:69;;;;3428:1;3394:17;:31;3412:12;;3394:31;;;;;;;;;;;:35;;;;3603:12;;3559:57;3574:13;:27;3588:12;;3574:27;;;;;;;;;;;;;;;;;;;;;3559:57;;;;;;;;;;;;;;;;;;;;;;1969:1658;3707:1;3698:10;;3693:93;3714:7;;:14;;3710:1;:18;3693:93;;;3749:26;3756:7;;3764:1;3756:10;;;;;;;;;;;;;;;3768:6;3749;:26::i;:::-;3730:3;;;;;;;3693:93;;;3871:17;3881:6;3871:9;:17::i;:::-;4024:28;4045:6;4024:20;:28::i;:::-;4234:36;4263:6;4234:28;:36::i;:::-;4440:38;4471:6;4440:30;:38::i;:::-;4489:13;;:15;;;;;;;;;;;;;4580:21;:29;4602:6;4580:29;;;;;;;;;;;;:32;;;;;;;;;;;;;4732:10;4698:16;:31;4715:13;;4698:31;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;4888:10;4822:24;:32;4847:6;4822:32;;;;;;;;;;;:63;4855:21;:29;4877:6;4855:29;;;;;;;;;;;;4822:63;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;1590:3420;;;;;;;;;:::o;6761:23:19:-;;;;:::o;2341:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;5669:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;5050:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4672:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10056:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;3879:53::-;;;;;;;;;;;;;;;;;:::o;8733:48::-;;;;;;;;;;;;;;;;;:::o;4360:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7606:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8342:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;665:205:4:-;737:7;704:16;:30;721:12;;704:30;;;;;;;;;;;:40;;;;788:7;754:17;:31;772:12;;754:31;;;;;;;;;;;:41;;;;859:4;805:34;:48;840:12;;805:48;;;;;;;;;;;:51;854:1;805:51;;;;;;;;;;;:58;;;;665:205::o;3282:75:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4002:47::-;;;;;;;;;;;;;;;;;:::o;8223:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2568:48::-;;;;;;;;;;;;;;;;;:::o;6959:25::-;;;;:::o;9946:68::-;;;;;;;;;;;;;:::o;6367:49::-;;;;;;;;;;;;;;;;;:::o;7823:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;360:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8570:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1155:46::-;;;;;;;;;;;;;;;;;:::o;5800:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9505:19::-;;;;:::o;7510:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3681:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1710:54::-;;;;;;;;;;;;;;;;;:::o;4140:51::-;;;;;;;;;;;;;;;;;:::o;1273:127:11:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1366:51:19:-;;;;;;;;;;;;;;;;;:::o;1567:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;301:131:3:-;360:4;383:20;:34;404:12;;383:34;;;;;;;;;;;:42;418:6;383:42;;;;;;;;;;;;376:49;;301:131;;;:::o;5290:43:19:-;;;;;;;;;;;;;;;;;;;;;;:::o;5522:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6681:24::-;;;;:::o;639:70:11:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;7404:51:19:-;;;;;;;;;;;;;;;;;:::o;926:83:11:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2749:72:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;876:208:4:-;950:7;916:16;:30;933:12;;916:30;;;;;;;;;;;;:41;;;;;;;;;;;1002:7;967:17;:31;985:12;;967:31;;;;;;;;;;;;:42;;;;;;;;;;;1073:4;1019:34;:48;1054:12;;1019:48;;;;;;;;;;;:51;1068:1;1019:51;;;;;;;;;;;:58;;;;876:208::o;989:72:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9531:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9868:72::-;;;;;;;;;;;;;:::o;7974:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;565:1019:3:-;642:19;674:15;746:16;819:13;905:6;969:22;1123:10;692:24;:32;717:6;692:32;;;;;;;;;;;:44;725:10;692:44;;;;;;;;;;;;;;;;674:62;;765:24;:32;790:6;765:32;;;;;;;;;;;:44;798:10;765:44;;;;;;;;;;;;;;;;;;;;;;;;;746:63;;835:26;:34;862:6;835:34;;;;;;;;;;;:46;870:10;835:46;;;;;;;;;;;;;;;;819:62;;914:1;905:10;;900:675;921:7;:14;917:1;:18;900:675;;;994:60;1050:3;995:49;1035:8;1029:3;:14;995:21;:29;1017:6;995:29;;;;;;;;;;;;:33;;:49;;;;:::i;:::-;994:55;;:60;;;;:::i;:::-;969:85;;1100:4;1085:19;;:11;:19;;;1081:144;;;1136:17;1123:30;;1081:144;;;1196:21;:29;1218:6;1196:29;;;;;;;;;;;;1188:37;;1081:144;1259:5;1241:23;;;;1292:5;1278:19;;;;1330:7;1316:10;:21;;1312:240;;;1388:4;1374:18;;1434:7;1421:10;:20;;;;;;;;1410:31;;1494:8;1480:10;:22;;1476:61;;;1535:2;1524:13;;1476:61;1312:240;937:3;;;;;;;900:675;;;565:1019;;;;;;;;;;:::o;7703:49:19:-;;;;;;;;;;;;;;;;;;;;;;:::o;7061:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7211:83::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;177:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2947:49::-;;;;;;;;;;;;;;;;;:::o;805:47::-;;;;;;;;;;;;;;;;;:::o;3490:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6496:28::-;;;;:::o;6158:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;3081:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8467:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5394:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4897:77::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6615:27::-;;;;:::o;1561:101:11:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1920:49:19:-;;;;;;;;;;;;;;;;;:::o;9356:25::-;;;;:::o;9014:51::-;;;;;;;;;;;;;;;;;:::o;6836:23::-;;;;:::o;115:610:21:-;173:7;343:20;373:17;393:7;373:27;;676:2;671:3;667:12;661:19;645:35;;706:12;699:19;;115:610;;;;;:::o;1376:145:17:-;1434:7;1453:9;1469:1;1465;:5;1453:17;;1493:1;1488;:6;;1480:15;;;;;;;;1513:1;1506:8;;1376:145;;;;;:::o;212:421::-;270:7;561:9;515:1;510;:6;506:45;;;539:1;532:8;;;;506:45;577:1;573;:5;561:17;;605:1;600;596;:5;;;;;;;;:10;588:19;;;;;;;;625:1;618:8;;212:421;;;;;;:::o;751:288::-;809:7;910:9;840:1;836;:5;828:14;;;;;;;;926:1;922;:5;;;;;;;;910:17;;1031:1;1024:8;;751:288;;;;;:::o;5093:4771:3:-;5683:13;5287:23;5303:6;5287:15;:23::i;:::-;5339:1;5329:6;:11;;5321:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5412:1;5402:6;:11;;5394:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:6;5476:20;:34;5497:12;;5476:34;;;;;;;;;;;:42;5511:6;5476:42;;;;;;;;;;;;:52;;5468:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5699:20;:34;5720:12;;5699:34;;;;;;;;;;;:42;5734:6;5699:42;;;;;;;;;;;;5683:58;;5861:6;5816:20;:34;5837:12;;5816:34;;;;;;;;;;;:42;5851:6;5816:42;;;;;;;;;;;:51;;;;6017:8;5969:23;:37;5993:12;;5969:37;;;;;;;;;;;:45;6007:6;5969:45;;;;;;;;;;;:56;;;;6221:3;6183:21;:35;6205:12;;6183:35;;;;;;;;;;;:41;;;;6431:10;6395:19;:33;6415:12;;6395:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;6664:1;6603:34;:48;6638:12;;6603:48;;;;;;;;;;;:58;6652:8;6603:58;;;;;;;;;;;;:62;6599:207;;;6741:65;6804:1;6741:34;:48;6776:12;;6741:48;;;;;;;;;;;:58;6790:8;6741:58;;;;;;;;;;;;:62;;:65;;;;:::i;:::-;6680:34;:48;6715:12;;6680:48;;;;;;;;;;;:58;6729:8;6680:58;;;;;;;;;;;:126;;;;6599:207;6995:63;7056:1;6995:34;:48;7030:12;;6995:48;;;;;;;;;;;:56;7044:6;6995:56;;;;;;;;;;;;:60;;:63;;;;:::i;:::-;6936:34;:48;6971:12;;6936:48;;;;;;;;;;;:56;6985:6;6936:56;;;;;;;;;;;:122;;;;7278:40;7316:1;7278:19;:33;7298:12;;7278:33;;;;;;;;;;;;:37;;:40;;;;:::i;:::-;7242:19;:33;7262:12;;7242:33;;;;;;;;;;;:76;;;;7379:3;7330:24;:38;7355:12;;7330:38;;;;;;;;;;;:46;7369:6;7330:46;;;;;;;;;;;:52;;;;7393:13;:26;7407:11;;7393:26;;;;;;;;;;;:38;7420:10;7393:38;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;7443:14;:27;7458:11;;7443:27;;;;;;;;;;;:35;7471:6;7443:35;;;;;;;;;;;:47;7479:10;7443:47;;;;;;;;;;;;;;;;:49;;;;;;;;;;;;;7694:72;7764:1;7694:24;:32;7719:6;7694:32;;;;;;;;;;;:65;7727:23;:31;7751:6;7727:31;;;;;;;;;;;;7694:65;;;;;;;;;;;;:69;;:72;;;;:::i;:::-;7626:24;:32;7651:6;7626:32;;;;;;;;;;;:65;7659:23;:31;7683:6;7659:31;;;;;;;;;;;;7626:65;;;;;;;;;;;:140;;;;7945:6;7904:24;:38;7929:12;;7904:38;;;;;;;;;;;:47;;;;8148:12;;8136:10;8114:52;;8120:6;8114:52;8128:6;8162:3;8114:52;;;;;;;;;;;;;;;;;;;;;;;;8395:12;;8365:15;:27;8381:10;8365:27;;;;;;;;;;;;;;;:42;;;;8661:5;8601:34;:48;8636:12;;8601:48;;;;;;;;;;;:56;8650:6;8601:56;;;;;;;;;;;;:65;8597:1261;;;8794:6;8758:19;:33;8778:12;;8758:33;;;;;;;;;;;:42;;;;8930:19;:33;8950:12;;8930:33;;;;;;;;;;;;;;;;;;;;;8900:13;:27;8914:12;;8900:27;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;9043:48;9087:3;9043:39;9079:2;9043:17;:31;9061:12;;9043:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;8985:12;:25;8998:11;;8985:25;;;;;;;;;;;:54;9011:13;:27;9025:12;;9011:27;;;;;;;;;;;;;;;;;;;;;8985:54;;;;;;;;;;;;;;;;:106;;;;;;;;;;;9141:1;9106:18;:32;9125:12;;9106:32;;;;;;;;;;;:36;;;;9392:48;9436:3;9392:39;9428:2;9392:17;:31;9410:12;;9392:31;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;:43;;:48;;;;:::i;:::-;9358:17;:31;9376:12;;9358:31;;;;;;;;;;;:82;;;;9492:16;:30;9509:12;;9492:30;;;;;;;;;;;;9455:16;:34;9487:1;9472:12;;:16;9455:34;;;;;;;;;;;:67;;;;9652:1;9619:16;:30;9636:12;;9619:30;;;;;;;;;;;:34;;;;9800:12;;9755:58;9771:13;:27;9785:12;;9771:27;;;;;;;;;;;;;;;;;;;;;9755:58;;;;;;;;;;;;;;;;;;;;;;8597:1261;5093:4771;;;:::o;9931:702::-;10039:78;10090:26;10112:3;10090:17;10104:2;10090:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10039:24;:38;10064:12;;10039:38;;;;;;;;;;;:46;10078:6;10039:46;;;;;;;;;;;;:50;;:78;;;;:::i;:::-;9990:24;:38;10015:12;;9990:38;;;;;;;;;;;:46;10029:6;9990:46;;;;;;;;;;;:127;;;;10221:63;10257:26;10279:3;10257:17;10271:2;10257:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10221:17;:31;10239:12;;10221:31;;;;;;;;;;;;:35;;:63;;;;:::i;:::-;10187:17;:31;10205:12;;10187:31;;;;;;;;;;;:97;;;;10391:62;10426:26;10448:3;10426:17;10440:2;10426:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10391:16;:30;10408:12;;10391:30;;;;;;;;;;;;:34;;:62;;;;:::i;:::-;10358:16;:30;10375:12;;10358:30;;;;;;;;;;;:95;;;;10580:45;10598:26;10620:3;10598:17;10612:2;10598:9;:13;;:17;;;;:::i;:::-;:21;;:26;;;;:::i;:::-;10580:13;;:17;;:45;;;;:::i;:::-;10564:13;:61;;;;9931:702;:::o;10877:942::-;11198:64;11231:30;11257:3;11231:21;11249:2;11231:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;11198:18;:28;11217:8;;;;;;;;;;;11198:28;;;;;;;;;;;;;;;;:32;;:64;;;;:::i;:::-;11167:18;:28;11186:8;;;;;;;;;;;11167:28;;;;;;;;;;;;;;;:95;;;;11418:30;11444:3;11418:21;11436:2;11418:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;11374:18;:40;11393:12;:20;11406:6;11393:20;;;;;;;;;;;;;;;;;;;;;11374:40;;;;;;;;;;;;;;;;:74;;;;;;;;;;;11599:30;11625:3;11599:21;11617:2;11599:13;;:17;;:21;;;;:::i;:::-;:25;;:30;;;;:::i;:::-;11563:18;:32;11582:12;;;;;;;;;;;11563:32;;;;;;;;;;;;;;;;:66;;;;;;;;;;;10877:942;:::o;1041:278:12:-;1168:9;1120:24;:32;1145:6;1120:32;;;;;;;;;;;:44;1153:10;1120:44;;;;;;;;;;;;;;;;:57;;;;;;;;;;;1240:7;1192:24;:32;1217:6;1192:32;;;;;;;;;;;:44;1225:10;1192:44;;;;;;;;;;;;;;;;:55;;1188:124;;;1308:4;1261:24;:32;1286:6;1261:32;;;;;;;;;;;:44;1294:10;1261:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1188:124;1041:278;:::o;313:508::-;572:7;525:24;:32;550:6;525:32;;;;;;;;;;;:44;558:10;525:44;;;;;;;;;;;;;;;;:54;;;;;;;;476:26;:34;503:6;476:34;;;;;;;;;;;:46;511:10;476:46;;;;;;;;;;;;;;;:103;;;;732:8;684:24;:32;709:6;684:32;;;;;;;;;;;:44;717:10;684:44;;;;;;;;;;;;;;;;:56;;680:125;;;803:2;754:26;:34;781:6;754:34;;;;;;;;;;;:46;789:10;754:46;;;;;;;;;;;;;;;:51;;;;680:125;313:508;:::o;1796:169:11:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;799:2525:13:-;1178:17;1356;1056:11;982:25;:33;1008:6;982:33;;;;;;;;;;;:70;1050:1;1016:23;:31;1040:6;1016:31;;;;;;;;;;;;:35;982:70;;;;;;;;;;;;976:3;:76;:91;;972:2346;;;1198:24;:32;1223:6;1198:32;;;;;;;;;;;:65;1231:23;:31;1255:6;1231:31;;;;;;;;;;;;1198:65;;;;;;;;;;;;1178:85;;1376:38;1412:1;1376:23;:31;1400:6;1376:31;;;;;;;;;;;;:35;;:38;;;;:::i;:::-;1356:58;;1643:5;1594:54;;:23;:31;1618:6;1594:31;;;;;;;;;;;:45;1626:12;1594:45;;;;;;;;;;;;;;;;;;;;;:54;;;1590:573;;;1872:33;1892:12;1872:15;;:19;;:33;;;;:::i;:::-;1823:24;:32;1848:6;1823:32;;;;;;;;;;;:46;1856:12;1823:46;;;;;;;;;;;:82;;;;2073:3;2021:27;:35;2049:6;2021:35;;;;;;;;;;;:49;2057:12;2021:49;;;;;;;;;;;:55;;;;2144:4;2096:23;:31;2120:6;2096:31;;;;;;;;;;;:45;2128:12;2096:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;1590:573;2262:1;2193:24;:32;2218:6;2193:32;;;;;;;;;;;:65;2226:23;:31;2250:6;2226:31;;;;;;;;;;;;2193:65;;;;;;;;;;;;:70;2189:499;;;2439:24;2456:6;2439:16;:24::i;:::-;2670:3;2601:25;:33;2627:6;2601:33;;;;;;;;;;;:66;2635:23;:31;2659:6;2635:31;;;;;;;;;;;;2601:66;;;;;;;;;;;:72;;;;2189:499;2895:1;2826:24;:32;2851:6;2826:32;;;;;;;;;;;:65;2859:23;:31;2883:6;2859:31;;;;;;;;;;;;2826:65;;;;;;;;;;;;:70;2822:486;;;3077:21;:29;3099:6;3077:29;;;;;;;;;;;;3049:17;:25;3067:6;3049:25;;;;;;;;;;;:57;;;;3281:12;3247:23;:31;3271:6;3247:31;;;;;;;;;;;:46;;;;2822:486;972:2346;799:2525;;;:::o;1160:145:17:-;1218:7;1262:9;1250:1;1245;:6;;1237:15;;;;;;;;1278:1;1274;:5;1262:17;;1297:1;1290:8;;1160:145;;;;;:::o;192:467:4:-;424:43;463:3;424:34;454:3;424:17;:25;442:6;424:25;;;;;;;;;;;;:29;;:34;;;;:::i;:::-;:38;;:43;;;;:::i;:::-;392:21;:29;414:6;392:29;;;;;;;;;;;:75;;;;626:17;:25;644:6;626:25;;;;;;;;;;;;609:43;;;;;;;;;;192:467;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./Game.sol\";\n\ncontract GameMock is Game {\n\n    //функция обновления цены вызова функции закрашивания (paint)\n    function _updateCallPrice(uint _color) private {\n        \n        //увеличиваем цену вызова на 5% (используем для отображения на фронте)\n        nextCallPriceForColor[_color] = callPriceForColor[_color].mul(105).div(100);\n        \n        //вызываем ивент о том, что цена вызова функции paint обновлена\n        emit CallPriceUpdated(callPriceForColor[_color]);\n    }\n\n    function hardCode() external {\n        timeBankForRound[currentRound] = 1 ether;\n        colorBankForRound[currentRound] = 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n    function hardCode2() external {\n        timeBankForRound[currentRound] += 1 ether;\n        colorBankForRound[currentRound] += 1 ether;\n        colorToPaintedPixelsAmountForRound[currentRound][2] = 9998;\n    }\n\n}",
  "sourcePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
  "ast": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1646
      ]
    },
    "id": 1647,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1568,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1569,
        "nodeType": "ImportDirective",
        "scope": 1647,
        "sourceUnit": 1567,
        "src": "25:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1570,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1566,
              "src": "68:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1566",
                "typeString": "contract Game"
              }
            },
            "id": 1571,
            "nodeType": "InheritanceSpecifier",
            "src": "68:4:4"
          }
        ],
        "contractDependencies": [
          1566,
          1953,
          2062,
          2146,
          2308,
          2679,
          3034
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1646,
        "linearizedBaseContracts": [
          1646,
          1566,
          1953,
          2308,
          2146,
          3034,
          2679,
          2062
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "239:420:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1576,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "392:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1578,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "414:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "392:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "463:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "454:3:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1579,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2788,
                                "src": "424:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1581,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1580,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1573,
                                "src": "442:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "424:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2568,
                            "src": "424:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "424:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2592,
                        "src": "424:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "392:75:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "392:75:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2788,
                          "src": "626:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1593,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1592,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "644:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "626:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1590,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "609:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:43:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "EmitStatement",
                  "src": "604:48:4"
                }
              ]
            },
            "documentation": null,
            "id": 1597,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1597,
                  "src": "218:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "217:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:4"
            },
            "scope": 1646,
            "src": "192:467:4",
            "stateMutability": "nonpayable",
            "superFunction": 2181,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "694:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1600,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2716,
                        "src": "704:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1602,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1601,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "721:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "704:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "737:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "704:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
                  "src": "704:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1606,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "754:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1608,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1607,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "772:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "754:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "788:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "754:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "754:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1612,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2702,
                          "src": "805:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1613,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "840:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "805:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1616,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "805:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "805:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1621,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:4"
            },
            "scope": 1646,
            "src": "665:205:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1644,
              "nodeType": "Block",
              "src": "906:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2716,
                        "src": "916:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1626,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "933:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "950:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "916:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "916:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "967:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "985:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "967:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "967:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "967:42:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1636,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2702,
                          "src": "1019:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1639,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "1054:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1019:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1640,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1019:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1073:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1019:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1645,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:4"
            },
            "scope": 1646,
            "src": "876:208:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1647,
        "src": "47:1040:4"
      }
    ],
    "src": "0:1087:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/GameMock.sol",
    "exportedSymbols": {
      "GameMock": [
        1646
      ]
    },
    "id": 1647,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1568,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Game.sol",
        "file": "./Game.sol",
        "id": 1569,
        "nodeType": "ImportDirective",
        "scope": 1647,
        "sourceUnit": 1567,
        "src": "25:20:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1570,
              "name": "Game",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1566,
              "src": "68:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Game_$1566",
                "typeString": "contract Game"
              }
            },
            "id": 1571,
            "nodeType": "InheritanceSpecifier",
            "src": "68:4:4"
          }
        ],
        "contractDependencies": [
          1566,
          1953,
          2062,
          2146,
          2308,
          2679,
          3034
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1646,
        "linearizedBaseContracts": [
          1646,
          1566,
          1953,
          2308,
          2146,
          3034,
          2679,
          2062
        ],
        "name": "GameMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1596,
              "nodeType": "Block",
              "src": "239:420:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1576,
                        "name": "nextCallPriceForColor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "392:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1578,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1577,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "414:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "392:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "463:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "313035",
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "454:3:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              },
                              "value": "105"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_105_by_1",
                                "typeString": "int_const 105"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1579,
                                "name": "callPriceForColor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2788,
                                "src": "424:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1581,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1580,
                                "name": "_color",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1573,
                                "src": "442:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "424:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2568,
                            "src": "424:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "424:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2592,
                        "src": "424:38:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "424:43:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "392:75:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "392:75:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1591,
                          "name": "callPriceForColor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2788,
                          "src": "626:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1593,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1592,
                          "name": "_color",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "644:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "626:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1590,
                      "name": "CallPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "609:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:43:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1595,
                  "nodeType": "EmitStatement",
                  "src": "604:48:4"
                }
              ]
            },
            "documentation": null,
            "id": 1597,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_updateCallPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1573,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 1597,
                  "src": "218:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "217:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:4"
            },
            "scope": 1646,
            "src": "192:467:4",
            "stateMutability": "nonpayable",
            "superFunction": 2181,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "694:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1600,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2716,
                        "src": "704:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1602,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1601,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "721:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "704:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "737:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "704:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
                  "src": "704:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1606,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "754:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1608,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1607,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "772:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "754:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "788:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "754:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "754:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1612,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2702,
                          "src": "805:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1615,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1613,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "840:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "805:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1616,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "854:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "805:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "805:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "805:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1621,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:4"
            },
            "scope": 1646,
            "src": "665:205:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1644,
              "nodeType": "Block",
              "src": "906:178:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1624,
                        "name": "timeBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2716,
                        "src": "916:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1626,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1625,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "933:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "950:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "916:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "916:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1630,
                        "name": "colorBankForRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2706,
                        "src": "967:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1631,
                        "name": "currentRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "985:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "967:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:7:4",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "967:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1635,
                  "nodeType": "ExpressionStatement",
                  "src": "967:42:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1636,
                          "name": "colorToPaintedPixelsAmountForRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2702,
                          "src": "1019:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1639,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1637,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "1054:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1019:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1640,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1019:51:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "39393938",
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1073:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9998_by_1",
                        "typeString": "int_const 9998"
                      },
                      "value": "9998"
                    },
                    "src": "1019:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:58:4"
                }
              ]
            },
            "documentation": null,
            "id": 1645,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "hardCode2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:0:4"
            },
            "scope": 1646,
            "src": "876:208:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1647,
        "src": "47:1040:4"
      }
    ],
    "src": "0:1087:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-08T17:07:11.145Z"
}