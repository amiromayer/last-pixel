{
  "contractName": "Referral",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isGamePaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInTBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkToUser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToPaintedPixelsAmountForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerOfRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankDrawnForRound",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasReferrer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToTotalPaintsForCBIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalColorsNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isTBPDistributable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentPaintGenForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPlayedRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moneySpentByUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToTBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToStartTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToCBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paintsCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "newUserToCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainterForColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToOldColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isTBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToRefLink",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenStartedForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersCounterForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintedPixelForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nextCallPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCBPDistributable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPainterForRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefLink",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPaintTimeOfUser",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "referrerToReferrals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintsCounterForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "claimer",
          "type": "address"
        },
        {
          "name": "isResolved",
          "type": "bool"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerOfPixel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInCBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "colorBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPaintTimeOfUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToEndTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniqueUsersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToAmountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isCBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralToReferrer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPaintsInPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dividendsBank",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "cbIteration",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "CBPDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DividendsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "currentTime",
          "type": "uint256"
        }
      ],
      "name": "DividendsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "pixelId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "colorId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "painter",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Paint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winnerOfRound",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "ColorBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "winnerOfRound",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        }
      ],
      "name": "TimeBankPlayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCallPrice",
          "type": "uint256"
        }
      ],
      "name": "CallPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "round",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "tbIteration",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "TBPDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_refLink",
          "type": "string"
        }
      ],
      "name": "buyRefLink",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061036f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630422ddf31461037457806305bdd0be146103a3578063099b81ce146104085780630baaea44146104795780630cf9603f146104e65780630f6ed86e14610531578063102f97131461055c57806315682a66146105c957806318452cd81461060e57806319ef6a06146106695780631d64873b146106b45780631f5bdf5d146106df5780631f90c6ed1461073a57806321423af81461079f57806324d7806c146107ce57806328361f571461082957806328b290f91461086a5780632c6c1c41146108c15780632c7a3dae1461092257806333f9c388146109995780633a173505146109fa5780633c6dd01314610a455780633ca4c18314610a865780633d0d1a7914610ae75780633dc3c37714610b28578063411b007e14610b5357806341c5464e14610baa57806342e453ec14610c015780634b39173d14610c785780634c438ad714610cc35780634c78e40114610d085780635bfcdb2714610d495780635c25fd1314610e055780635d63ebb214610e305780635f5d554c14610ea75780636256655614610ef6578063628a71a314610f375780636e8fa2a814610f785780636f17eb4214610fa6578063715018a614610fe757806373a9ee2614610ffe57806376f5d96a1461103f57806379ecf3761461106e5780637e1e175c146110db5780638500b7b71461113657806387982ac31461118d5780638a19c8bc1461121a5780638da5cb5b146112455780638e2df39c1461129c5780638f32d59b146112dd5780638f63b7e51461130c578063a312072414611357578063a888c2cd146113a2578063a977e16814611428578063ab24c7d21461147f578063ae55ce82146114e4578063b0ff59d214611551578063b1a3883c146115b2578063b60cbeb61461161d578063b8232d5d1461167e578063be7d6226146116c9578063c64a2e561461170a578063c957387b1461174b578063c9f8234f14611796578063d4526e68146117c1578063d5de47c71461180a578063da68b12114611855578063deaf0fa11461189a578063eaf1c9101461191d578063eef565da1461197e578063f2fde38b146119a9578063f49916f5146119ec578063f5f95b3b14611a2d578063fb454d2914611a58578063fea11fe314611aaf575b600080fd5b34801561038057600080fd5b50610389611ada565b604051808215151515815260200191505060405180910390f35b3480156103af57600080fd5b506103ee60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aed565b604051808215151515815260200191505060405180910390f35b34801561041457600080fd5b506104376004803603810190808035600019169060200190929190505050611b1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561048557600080fd5b506104a460048036038101908080359060200190929190505050611b4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104f257600080fd5b5061051b6004803603810190808035906020019092919080359060200190929190505050611b82565b6040518082815260200191505060405180910390f35b34801561053d57600080fd5b50610546611ba7565b6040518082815260200191505060405180910390f35b34801561056857600080fd5b5061058760048036038101908080359060200190929190505050611bad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d557600080fd5b506105f460048036038101908080359060200190929190505050611be0565b604051808215151515815260200191505060405180910390f35b34801561061a57600080fd5b5061064f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c00565b604051808215151515815260200191505060405180910390f35b34801561067557600080fd5b5061069e6004803603810190808035906020019092919080359060200190929190505050611c20565b6040518082815260200191505060405180910390f35b3480156106c057600080fd5b506106c9611c45565b6040518082815260200191505060405180910390f35b3480156106eb57600080fd5b50610720600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c4b565b604051808215151515815260200191505060405180910390f35b34801561074657600080fd5b5061078560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c6b565b604051808215151515815260200191505060405180910390f35b3480156107ab57600080fd5b506107b4611c9a565b604051808215151515815260200191505060405180910390f35b3480156107da57600080fd5b5061080f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cad565b604051808215151515815260200191505060405180910390f35b34801561083557600080fd5b5061085460048036038101908080359060200190929190505050611ccd565b6040518082815260200191505060405180910390f35b34801561087657600080fd5b506108ab600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ce5565b6040518082815260200191505060405180910390f35b3480156108cd57600080fd5b5061090c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cfd565b6040518082815260200191505060405180910390f35b34801561092e57600080fd5b506109576004803603810190808035906020019092919080359060200190929190505050611d22565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a557600080fd5b506109e460048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d6f565b6040518082815260200191505060405180910390f35b348015610a0657600080fd5b50610a2f6004803603810190808035906020019092919080359060200190929190505050611d94565b6040518082815260200191505060405180910390f35b348015610a5157600080fd5b50610a7060048036038101908080359060200190929190505050611db9565b6040518082815260200191505060405180910390f35b348015610a9257600080fd5b50610ad160048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dd1565b6040518082815260200191505060405180910390f35b348015610af357600080fd5b50610b1260048036038101908080359060200190929190505050611df6565b6040518082815260200191505060405180910390f35b348015610b3457600080fd5b50610b3d611e0e565b6040518082815260200191505060405180910390f35b348015610b5f57600080fd5b50610b68611e14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bb657600080fd5b50610beb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e3a565b6040518082815260200191505060405180910390f35b348015610c0d57600080fd5b50610c366004803603810190808035906020019092919080359060200190929190505050611e52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c8457600080fd5b50610cad6004803603810190808035906020019092919080359060200190929190505050611e94565b6040518082815260200191505060405180910390f35b348015610ccf57600080fd5b50610cee60048036038101908080359060200190929190505050611eb9565b604051808215151515815260200191505060405180910390f35b348015610d1457600080fd5b50610d3360048036038101908080359060200190929190505050611ed9565b6040518082815260200191505060405180910390f35b348015610d5557600080fd5b50610d8a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ef1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dca578082015181840152602081019050610daf565b50505050905090810190601f168015610df75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e1157600080fd5b50610e1a611fa1565b6040518082815260200191505060405180910390f35b348015610e3c57600080fd5b50610e656004803603810190808035906020019092919080359060200190929190505050611fa7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eb357600080fd5b50610edc6004803603810190808035906020019092919080359060200190929190505050611ff4565b604051808215151515815260200191505060405180910390f35b348015610f0257600080fd5b50610f2160048036038101908080359060200190929190505050612023565b6040518082815260200191505060405180910390f35b348015610f4357600080fd5b50610f626004803603810190808035906020019092919050505061203b565b6040518082815260200191505060405180910390f35b610fa4600480360381019080803590602001908201803590602001919091929391929390505050612053565b005b348015610fb257600080fd5b50610fd1600480360381019080803590602001909291905050506125b1565b6040518082815260200191505060405180910390f35b348015610ff357600080fd5b50610ffc6125c9565b005b34801561100a57600080fd5b506110296004803603810190808035906020019092919050505061269b565b6040518082815260200191505060405180910390f35b34801561104b57600080fd5b506110546126b3565b604051808215151515815260200191505060405180910390f35b34801561107a57600080fd5b50611099600480360381019080803590602001909291905050506126c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110e757600080fd5b5061111c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126f9565b604051808215151515815260200191505060405180910390f35b34801561114257600080fd5b50611177600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612719565b6040518082815260200191505060405180910390f35b34801561119957600080fd5b506111d8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612731565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561122657600080fd5b5061122f61277d565b6040518082815260200191505060405180910390f35b34801561125157600080fd5b5061125a612783565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156112a857600080fd5b506112c7600480360381019080803590602001909291905050506127ac565b6040518082815260200191505060405180910390f35b3480156112e957600080fd5b506112f26127c4565b604051808215151515815260200191505060405180910390f35b34801561131857600080fd5b50611341600480360381019080803590602001909291908035906020019092919050505061281b565b6040518082815260200191505060405180910390f35b34801561136357600080fd5b5061138c6004803603810190808035906020019092919080359060200190929190505050612840565b6040518082815260200191505060405180910390f35b3480156113ae57600080fd5b506113cd60048036038101908080359060200190929190505050612865565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182815260200194505050505060405180910390f35b34801561143457600080fd5b5061143d6128d1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561148b57600080fd5b506114ca60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128f7565b604051808215151515815260200191505060405180910390f35b3480156114f057600080fd5b5061150f60048036038101908080359060200190929190505050612926565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561155d57600080fd5b5061159c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612959565b6040518082815260200191505060405180910390f35b3480156115be57600080fd5b506116076004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061297e565b6040518082815260200191505060405180910390f35b34801561162957600080fd5b5061166860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129b0565b6040518082815260200191505060405180910390f35b34801561168a57600080fd5b506116b360048036038101908080359060200190929190803590602001909291905050506129d5565b6040518082815260200191505060405180910390f35b3480156116d557600080fd5b506116f4600480360381019080803590602001909291905050506129fa565b6040518082815260200191505060405180910390f35b34801561171657600080fd5b5061173560048036038101908080359060200190929190505050612a12565b6040518082815260200191505060405180910390f35b34801561175757600080fd5b506117806004803603810190808035906020019092919080359060200190929190505050612a2a565b6040518082815260200191505060405180910390f35b3480156117a257600080fd5b506117ab612a4f565b6040518082815260200191505060405180910390f35b3480156117cd57600080fd5b506117f06004803603810190808035600019169060200190929190505050612a55565b604051808215151515815260200191505060405180910390f35b34801561181657600080fd5b5061183f6004803603810190808035906020019092919080359060200190929190505050612a75565b6040518082815260200191505060405180910390f35b34801561186157600080fd5b5061188060048036038101908080359060200190929190505050612a9a565b604051808215151515815260200191505060405180910390f35b3480156118a657600080fd5b506118db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612aba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561192957600080fd5b5061196860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612aed565b6040518082815260200191505060405180910390f35b34801561198a57600080fd5b50611993612b12565b6040518082815260200191505060405180910390f35b3480156119b557600080fd5b506119ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b18565b005b3480156119f857600080fd5b50611a1760048036038101908080359060200190929190505050612b37565b6040518082815260200191505060405180910390f35b348015611a3957600080fd5b50611a42612b4f565b6040518082815260200191505060405180910390f35b348015611a6457600080fd5b50611a99600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b55565b6040518082815260200191505060405180910390f35b348015611abb57600080fd5b50611ac4612b6d565b6040518082815260200191505060405180910390f35b604160149054906101000a900460ff1681565b60346020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60236020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b60295481565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60486020528060005260406000206000915054906101000a900460ff1681565b60216020528060005260406000206000915054906101000a900460ff1681565b600e602052816000526040600020602052806000526040600020600091509150505481565b60455481565b601d6020528060005260406000206000915054906101000a900460ff1681565b601b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b604160169054906101000a900460ff1681565b60426020528060005260406000206000915054906101000a900460ff1681565b60176020528060005260406000206000915090505481565b60396020528060005260406000206000915090505481565b601a602052816000526040600020602052806000526040600020600091509150505481565b603060205281600052604060002081815481101515611d3d57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6036602052816000526040600020602052806000526040600020600091509150505481565b6014602052816000526040600020602052806000526040600020600091509150505481565b60186020528060005260406000206000915090505481565b6035602052816000526040600020602052806000526040600020600091509150505481565b60106020528060005260406000206000915090505481565b602b5481565b604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60256020528060005260406000206000915090505481565b60326020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b60386020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60226020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f995780601f10611f6e57610100808354040283529160200191611f99565b820191906000526020600020905b815481529060010190602001808311611f7c57829003601f168201915b505050505081565b603e5481565b602f60205281600052604060002081815481101515611fc257fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60166020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60496020528060005260406000206000915090505481565b600c6020528060005260406000206000915090505481565b600082828080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506004815110151515612128576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526566206c696e6b2073686f756c64206265206f66206c656e677468205b342c81526020017f385d00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60088151111515156121c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526566206c696e6b2073686f756c64206265206f66206c656e677468205b342c81526020017f385d00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b67016345785d8a00003414151561226d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f53657474696e6720726566657272616c206c696e6b20636f73747320302e312081526020017f4554482e0000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60001515601e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561235b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f596f75206861766520616c72656164792067656e65726174656420796f75722081526020017f726566206c696e6b2e000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61239684848080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050612b73565b6fffffffffffffffffffffffffffffffff191691506001151560246000846000191660001916815260200190815260200160002060009054906101000a900460ff16151514151515612476576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001807f5468697320726566657272616c206c696e6b20616c726561647920657869737481526020017f732c2074727920646966666572656e74206f6e652e000000000000000000000081525060400191505060405180910390fd5b6001601e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508383602260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020919061251c929190612c86565b50600160246000846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055503360236000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60196020528060005260406000206000915090505481565b6125d16127c4565b15156125dc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600a6020528060005260406000206000915090505481565b604160159054906101000a900460ff1681565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601e6020528060005260406000206000915054906101000a900460ff1681565b60466020528060005260406000206000915090505481565b602080528160005260406000208181548110151561274b57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60285481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b602e6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6011602052816000526040600020602052806000526040600020600091509150505481565b6008602052816000526040600020602052806000526040600020600091509150505481565b603f8181548110151561287457fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154905084565b604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60336020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60316020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602c602052816000526040600020602052806000526040600020600091509150505481565b602d60205282600052604060002060205281600052604060002060205280600052604060002060009250925050505481565b6047602052816000526040600020602052806000526040600020600091509150505481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60126020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b6015602052816000526040600020602052806000526040600020600091509150505481565b60265481565b60246020528060005260406000206000915054906101000a900460ff1681565b6013602052816000526040600020602052806000526040600020600091509150505481565b60376020528060005260406000206000915054906101000a900460ff1681565b601f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c602052816000526040600020602052806000526040600020600091509150505481565b60275481565b612b206127c4565b1515612b2b57600080fd5b612b3481612b8c565b50565b600d6020528060005260406000206000915090505481565b603d5481565b603b6020528060005260406000206000915090505481565b602a5481565b6000806060839050602081015191508192505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612bc857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612cc757803560ff1916838001178555612cf5565b82800160010185558215612cf5579182015b82811115612cf4578235825591602001919060010190612cd9565b5b509050612d029190612d06565b5090565b612d2891905b80821115612d24576000816000905550600101612d0c565b5090565b905600a165627a7a72305820daf4c883786f64c47bfb6e27cb24bee8296b2aa7767279c1edb877f2c40425e10029",
  "sourceMap": "99:849:10:-;;;9949:42:14;9919:72;;;;;;;;;;;;;;;;;;;;10023:42;9997:68;;;;;;;;;;;;;;;;;;;;518:10:7;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;99:849:10;;;;;;",
  "deployedSourceMap": "99:849:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10072:24:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10072:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;8159:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8159:58:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6029:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8872:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8872:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:82:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6812:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6812:23:14;;;;;;;;;;;;;;;;;;;;;;;2393:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2393:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10482:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10482:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5720:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5720:44:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2238:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2238:80:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10298:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10298:29:14;;;;;;;;;;;;;;;;;;;;;;;5101:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5101:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4723:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4723:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10160:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10160:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;10201:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10201:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3930:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3930:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8784:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4411:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4411:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7657:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7657:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8393:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8393:63:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3333:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4053:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4053:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8274:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8274:63:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2620:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7010:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7010:25:14;;;;;;;;;;;;;;;;;;;;;;;9997:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9997:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;6418:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6418:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7874:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7874:75:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;406:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8621:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8621:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5851:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5851:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5851:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9556:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9556:19:14;;;;;;;;;;;;;;;;;;;;;;;7561:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7561:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3732:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3732:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10648:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10648:50:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:599:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4191:51:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4191:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:7;;;;;;1412:51:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1412:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10124:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10124:30:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:52:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5341:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5341:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10339:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10339:52:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5573:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6732:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6732:24:14;;;;;;;;;;;;;;;;;;;;;;;639:70:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;7455:51:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7455:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:7;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:72:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2801:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9582:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9582:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9919:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9919:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;8025:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8025:58:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7754:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7754:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7112:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7262:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7262:83:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10397:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10397:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2999:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2999:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3541:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3541:73:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6547:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6547:28:14;;;;;;;;;;;;;;;;;;;;;;;6209:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6209:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3132:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3132:72:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8518:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8518:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5445:54:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4948:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4948:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6666:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6666:27:14;;;;;;;;;;;;;;;;;;;;;;;1561:101:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:49:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1966:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9407:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9407:25:14;;;;;;;;;;;;;;;;;;;;;;;9065:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9065:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6887:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6887:23:14;;;;;;;;;;;;;;;;;;;;;;;10072:24;;;;;;;;;;;;;:::o;8159:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6029:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;8872:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;683:82::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6812:23::-;;;;:::o;2393:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;10482:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;5720:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;2238:80::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10298:29::-;;;;:::o;5101:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4723:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10160:30::-;;;;;;;;;;;;;:::o;10201:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;3930:53::-;;;;;;;;;;;;;;;;;:::o;8784:48::-;;;;;;;;;;;;;;;;;:::o;4411:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7657:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8393:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3333:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4053:47::-;;;;;;;;;;;;;;;;;:::o;8274:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2620:48::-;;;;;;;;;;;;;;;;;:::o;7010:25::-;;;;:::o;9997:68::-;;;;;;;;;;;;;:::o;6418:49::-;;;;;;;;;;;;;;;;;:::o;7874:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;406:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8621:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:46::-;;;;;;;;;;;;;;;;;:::o;5851:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9556:19::-;;;;:::o;7561:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3732:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10648:50::-;;;;;;;;;;;;;;;;;:::o;1756:54::-;;;;;;;;;;;;;;;;;:::o;347:599:10:-;613:17;400:8;;844:215:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:1;905:4;899:18;:23;;891:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:1;985:4;979:18;:23;;971:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:9:10;445;:22;437:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:5;526:31;;:10;:22;537:10;526:22;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;518:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:25;649:8;;633:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:25::i;:::-;613:45;;;;;704:4;676:32;;:13;:24;690:9;676:24;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;;668:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:4;776:10;:22;787:10;776:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;843:8;;815:13;:25;829:10;815:25;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;888:4;861:13;:24;875:9;861:24;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;929:10;902:13;:24;916:9;902:24;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;347:599;;;;:::o;4191:51:14:-;;;;;;;;;;;;;;;;;:::o;1273:127:7:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1412:51:14:-;;;;;;;;;;;;;;;;;:::o;10124:30::-;;;;;;;;;;;;;:::o;1613:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;5341:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;10339:52::-;;;;;;;;;;;;;;;;;:::o;5573:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6732:24::-;;;;:::o;639:70:7:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;7455:51:14:-;;;;;;;;;;;;;;;;;:::o;926:83:7:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2801:72:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1035:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9582:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9919:72::-;;;;;;;;;;;;;:::o;8025:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7754:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;7112:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7262:83::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10397:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;223:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2999:49::-;;;;;;;;;;;;;;;;;:::o;851:47::-;;;;;;;;;;;;;;;;;:::o;3541:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6547:28::-;;;;:::o;6209:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;3132:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8518:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5445:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4948:77::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6666:27::-;;;;:::o;1561:101:7:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1966:49:14:-;;;;;;;;;;;;;;;;;:::o;9407:25::-;;;;:::o;9065:51::-;;;;;;;;;;;;;;;;;:::o;6887:23::-;;;;:::o;115:610:15:-;173:7;343:20;373:17;393:7;373:27;;676:2;671:3;667:12;661:19;645:35;;706:12;699:19;;115:610;;;;;:::o;1796:169:7:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;99:849:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./SafeMath.sol\";\nimport \"./Modifiers.sol\";\nimport \"./Utils.sol\";\n\ncontract Referral is Modifiers {\n    using SafeMath for uint;\n    \n    //функция для покупки реферальной ссылки для пользователя (длина в диапазоне от 4 до 8 символов)\n    function buyRefLink(string _refLink) isValidRefLink (_refLink) external payable {\n        require(msg.value == 0.1 ether, \"Setting referral link costs 0.1 ETH.\");\n        require(hasRefLink[msg.sender] == false, \"You have already generated your ref link.\");\n        bytes32 refLink32 = Utils.toBytes32(_refLink);\n        require(refLinkExists[refLink32] != true, \"This referral link already exists, try different one.\");\n        hasRefLink[msg.sender] = true;\n        userToRefLink[msg.sender] = _refLink;\n        refLinkExists[refLink32] = true;\n        refLinkToUser[refLink32] = msg.sender;\n    }\n}",
  "sourcePath": "/Users/Amir/last-pixel-contracts/contracts/Referral.sol",
  "ast": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Referral.sol",
    "exportedSymbols": {
      "Referral": [
        1957
      ]
    },
    "id": 1958,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1878,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1879,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 2189,
        "src": "25:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Modifiers.sol",
        "file": "./Modifiers.sol",
        "id": 1880,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 1522,
        "src": "50:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Utils.sol",
        "file": "./Utils.sol",
        "id": 1881,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 2623,
        "src": "76:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1882,
              "name": "Modifiers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1521,
              "src": "120:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Modifiers_$1521",
                "typeString": "contract Modifiers"
              }
            },
            "id": 1883,
            "nodeType": "InheritanceSpecifier",
            "src": "120:9:10"
          }
        ],
        "contractDependencies": [
          1521,
          1630,
          2206,
          2601
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1957,
        "linearizedBaseContracts": [
          1957,
          1521,
          2601,
          2206,
          1630
        ],
        "name": "Referral",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1886,
            "libraryName": {
              "contractScope": null,
              "id": 1884,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2188,
              "src": "142:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2188",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "136:24:10",
            "typeName": {
              "id": 1885,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "155:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1955,
              "nodeType": "Block",
              "src": "427:519:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1895,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2757,
                            "src": "445:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "445:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e31",
                          "id": 1897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "458:9:10",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "445:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53657474696e6720726566657272616c206c696e6b20636f73747320302e31204554482e",
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "469:38:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8307b319ec28936ef4a7b6fcccd60170b0b4ea0e6d934fbbaae8764b8f343147",
                          "typeString": "literal_string \"Setting referral link costs 0.1 ETH.\""
                        },
                        "value": "Setting referral link costs 0.1 ETH."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8307b319ec28936ef4a7b6fcccd60170b0b4ea0e6d934fbbaae8764b8f343147",
                          "typeString": "literal_string \"Setting referral link costs 0.1 ETH.\""
                        }
                      ],
                      "id": 1894,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "437:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:71:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1901,
                  "nodeType": "ExpressionStatement",
                  "src": "437:71:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1903,
                            "name": "hasRefLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "526:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1906,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1904,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2757,
                              "src": "537:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "537:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "526:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "526:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206861766520616c72656164792067656e65726174656420796f757220726566206c696e6b2e",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "559:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f75f1266077e32f3ed308733b13fbb3cf7b5f90d077cf094d0b3b91a2f27b42",
                          "typeString": "literal_string \"You have already generated your ref link.\""
                        },
                        "value": "You have already generated your ref link."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f75f1266077e32f3ed308733b13fbb3cf7b5f90d077cf094d0b3b91a2f27b42",
                          "typeString": "literal_string \"You have already generated your ref link.\""
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "518:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:85:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "518:85:10"
                },
                {
                  "assignments": [
                    1913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1913,
                      "name": "refLink32",
                      "nodeType": "VariableDeclaration",
                      "scope": 1956,
                      "src": "613:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "613:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1918,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1916,
                        "name": "_refLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1888,
                        "src": "649:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1914,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "633:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$2622_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2621,
                      "src": "633:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes16_$",
                        "typeString": "function (string memory) pure returns (bytes16)"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:45:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1920,
                            "name": "refLinkExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "676:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1922,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "refLink32",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1913,
                            "src": "690:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "676:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "704:4:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "676:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320726566657272616c206c696e6b20616c7265616479206578697374732c2074727920646966666572656e74206f6e652e",
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "710:55:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86d95e2c3fca3cc0b43c169dafae917e9ff731e62777b1d4ba30c5ae9fc294a",
                          "typeString": "literal_string \"This referral link already exists, try different one.\""
                        },
                        "value": "This referral link already exists, try different one."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86d95e2c3fca3cc0b43c169dafae917e9ff731e62777b1d4ba30c5ae9fc294a",
                          "typeString": "literal_string \"This referral link already exists, try different one.\""
                        }
                      ],
                      "id": 1919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "668:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:98:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "668:98:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1928,
                        "name": "hasRefLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "776:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1931,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2757,
                          "src": "787:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "787:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "776:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "801:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "776:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "776:29:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1935,
                        "name": "userToRefLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "815:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 1938,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1936,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2757,
                          "src": "829:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "829:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "815:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1939,
                      "name": "_refLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "843:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "815:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "815:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "refLinkExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "861:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1944,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1943,
                        "name": "refLink32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "875:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "861:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "888:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "861:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "861:31:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1948,
                        "name": "refLinkToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "902:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 1950,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1949,
                        "name": "refLink32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "916:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "902:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1951,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "929:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "929:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "902:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "902:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 1956,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1891,
                    "name": "_refLink",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1888,
                    "src": "400:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 1892,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1890,
                  "name": "isValidRefLink",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1520,
                  "src": "384:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:25:10"
              }
            ],
            "name": "buyRefLink",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "name": "_refLink",
                  "nodeType": "VariableDeclaration",
                  "scope": 1956,
                  "src": "367:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:17:10"
            },
            "payable": true,
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:10"
            },
            "scope": 1957,
            "src": "347:599:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1958,
        "src": "99:849:10"
      }
    ],
    "src": "0:948:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Referral.sol",
    "exportedSymbols": {
      "Referral": [
        1957
      ]
    },
    "id": 1958,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1878,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1879,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 2189,
        "src": "25:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Modifiers.sol",
        "file": "./Modifiers.sol",
        "id": 1880,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 1522,
        "src": "50:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Utils.sol",
        "file": "./Utils.sol",
        "id": 1881,
        "nodeType": "ImportDirective",
        "scope": 1958,
        "sourceUnit": 2623,
        "src": "76:21:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1882,
              "name": "Modifiers",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1521,
              "src": "120:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Modifiers_$1521",
                "typeString": "contract Modifiers"
              }
            },
            "id": 1883,
            "nodeType": "InheritanceSpecifier",
            "src": "120:9:10"
          }
        ],
        "contractDependencies": [
          1521,
          1630,
          2206,
          2601
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1957,
        "linearizedBaseContracts": [
          1957,
          1521,
          2601,
          2206,
          1630
        ],
        "name": "Referral",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1886,
            "libraryName": {
              "contractScope": null,
              "id": 1884,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2188,
              "src": "142:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2188",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "136:24:10",
            "typeName": {
              "id": 1885,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "155:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 1955,
              "nodeType": "Block",
              "src": "427:519:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1895,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2757,
                            "src": "445:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "445:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e31",
                          "id": 1897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "458:9:10",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "445:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53657474696e6720726566657272616c206c696e6b20636f73747320302e31204554482e",
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "469:38:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8307b319ec28936ef4a7b6fcccd60170b0b4ea0e6d934fbbaae8764b8f343147",
                          "typeString": "literal_string \"Setting referral link costs 0.1 ETH.\""
                        },
                        "value": "Setting referral link costs 0.1 ETH."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8307b319ec28936ef4a7b6fcccd60170b0b4ea0e6d934fbbaae8764b8f343147",
                          "typeString": "literal_string \"Setting referral link costs 0.1 ETH.\""
                        }
                      ],
                      "id": 1894,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "437:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:71:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1901,
                  "nodeType": "ExpressionStatement",
                  "src": "437:71:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1903,
                            "name": "hasRefLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2347,
                            "src": "526:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1906,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1904,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2757,
                              "src": "537:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "537:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "526:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "552:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "526:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206861766520616c72656164792067656e65726174656420796f757220726566206c696e6b2e",
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "559:43:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f75f1266077e32f3ed308733b13fbb3cf7b5f90d077cf094d0b3b91a2f27b42",
                          "typeString": "literal_string \"You have already generated your ref link.\""
                        },
                        "value": "You have already generated your ref link."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f75f1266077e32f3ed308733b13fbb3cf7b5f90d077cf094d0b3b91a2f27b42",
                          "typeString": "literal_string \"You have already generated your ref link.\""
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "518:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:85:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "518:85:10"
                },
                {
                  "assignments": [
                    1913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1913,
                      "name": "refLink32",
                      "nodeType": "VariableDeclaration",
                      "scope": 1956,
                      "src": "613:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "613:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1918,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1916,
                        "name": "_refLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1888,
                        "src": "649:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1914,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2622,
                        "src": "633:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$2622_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toBytes32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2621,
                      "src": "633:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes16_$",
                        "typeString": "function (string memory) pure returns (bytes16)"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:45:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1920,
                            "name": "refLinkExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "676:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1922,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1921,
                            "name": "refLink32",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1913,
                            "src": "690:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "676:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "704:4:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "676:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320726566657272616c206c696e6b20616c7265616479206578697374732c2074727920646966666572656e74206f6e652e",
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "710:55:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86d95e2c3fca3cc0b43c169dafae917e9ff731e62777b1d4ba30c5ae9fc294a",
                          "typeString": "literal_string \"This referral link already exists, try different one.\""
                        },
                        "value": "This referral link already exists, try different one."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86d95e2c3fca3cc0b43c169dafae917e9ff731e62777b1d4ba30c5ae9fc294a",
                          "typeString": "literal_string \"This referral link already exists, try different one.\""
                        }
                      ],
                      "id": 1919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2760,
                        2761
                      ],
                      "referencedDeclaration": 2761,
                      "src": "668:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:98:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "668:98:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1928,
                        "name": "hasRefLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "776:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1931,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2757,
                          "src": "787:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "787:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "776:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "801:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "776:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "776:29:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1935,
                        "name": "userToRefLink",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "815:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 1938,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1936,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2757,
                          "src": "829:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "829:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "815:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1939,
                      "name": "_refLink",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "843:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "815:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1941,
                  "nodeType": "ExpressionStatement",
                  "src": "815:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "refLinkExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "861:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1944,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1943,
                        "name": "refLink32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "875:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "861:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "888:4:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "861:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1947,
                  "nodeType": "ExpressionStatement",
                  "src": "861:31:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1948,
                        "name": "refLinkToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2368,
                        "src": "902:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 1950,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1949,
                        "name": "refLink32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "916:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "902:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1951,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2757,
                        "src": "929:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "929:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "902:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "902:37:10"
                }
              ]
            },
            "documentation": null,
            "id": 1956,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1891,
                    "name": "_refLink",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1888,
                    "src": "400:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 1892,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1890,
                  "name": "isValidRefLink",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1520,
                  "src": "384:14:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:25:10"
              }
            ],
            "name": "buyRefLink",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "name": "_refLink",
                  "nodeType": "VariableDeclaration",
                  "scope": 1956,
                  "src": "367:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "366:17:10"
            },
            "payable": true,
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:10"
            },
            "scope": 1957,
            "src": "347:599:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1958,
        "src": "99:849:10"
      }
    ],
    "src": "0:948:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x7cdacbd4ba02cd57e5fd31c10cade80821b8b16c",
      "transactionHash": "0x395d54d0c04c5041dfdfc5fa615446404b0f36bd6d56d6cb16beb8e3e19d337f"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x231a83ae8dfd8546b30142e5e8ae17e9efb79ed1",
      "transactionHash": "0xeac72e1dfff405e5dc0b7c0d55bb58d6c2360a6a824a4796ae21295f25f83533"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-23T06:19:51.048Z"
}