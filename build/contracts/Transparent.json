{
  "contractName": "Transparent",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isGamePaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInTBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkToUser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToTotalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerOfColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorToPaintedPixelsAmountForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerOfRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasReferrer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegisteredUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentPaintGenForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastPlayedRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moneySpentByUserForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToTBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToStartTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "painterToCBP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paintsCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "newUserToCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainterForColor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToOldColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isTBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "timeBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userToRefLink",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cbTeam",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenStartedForColor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintedPixelForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nextCallPriceForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastPainterForRound",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefLink",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "referrerToReferrals",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintsCounterForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToPaintTimeForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "claimer",
          "type": "address"
        },
        {
          "name": "isResolved",
          "type": "bool"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerOfPixel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInCBT",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "counterToPainter",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "colorBankShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pixelToColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalPaintsForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colorBankForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToEndTimeForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uniqueUsersCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "refLinkExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "paintGenToAmountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isCBPTransfered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "referralToReferrer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersPaintDiscountForColor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxPaintsInPool",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winnerColorForRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dividendsBank",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cbIteration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_erc1538Delegate",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "CommitMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "functionId",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "name": "oldDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newDelegate",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "functionSignature",
          "type": "string"
        }
      ],
      "name": "FunctionUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610317576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630422ddf31461047c57806305bdd0be146104ab578063099b81ce146105105780630ba36221146105815780630baaea44146105cc5780630cf9603f146106395780630f6ed86e14610684578063102f9713146106af57806318452cd81461071c5780631f5bdf5d146107775780631f90c6ed146107d257806324d7806c1461083757806328361f571461089257806328b290f9146108d35780632c6c1c411461092a5780632c7a3dae1461098b57806333f9c38814610a025780633a17350514610a635780633c6dd01314610aae5780633ca4c18314610aef5780633d0d1a7914610b505780633dc3c37714610b91578063411b007e14610bbc57806341c5464e14610c1357806342e453ec14610c6a5780634b39173d14610ce15780634c438ad714610d2c5780634c78e40114610d715780635bfcdb2714610db25780635c25fd1314610e6e5780635d63ebb214610e995780635f5d554c14610f10578063628a71a314610f5f5780636f17eb4214610fa0578063715018a614610fe157806373a9ee2614610ff857806379ecf376146110395780637e1e175c146110a657806387982ac3146111015780638a19c8bc1461118e5780638da5cb5b146111b95780638e2df39c146112105780638f32d59b146112515780638f63b7e514611280578063a3120724146112cb578063a888c2cd14611316578063a977e1681461139c578063ab24c7d2146113f3578063ae55ce8214611458578063b0ff59d2146114c5578063b1a3883c14611526578063b8232d5d14611591578063be7d6226146115dc578063c64a2e561461161d578063c957387b1461165e578063c9f8234f146116a9578063d4526e68146116d4578063d5de47c71461171d578063da68b12114611768578063deaf0fa1146117ad578063eaf1c91014611830578063eef565da14611891578063f2fde38b146118bc578063f49916f5146118ff578063f5f95b3b14611940578063fb454d291461196b578063fea11fe3146119c2575b60006001600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610455576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f46756e6374696f6e20646f6573206e6f742065786973742e000000000000000081525060200191505060405180910390fd5b60405136600082376000803683855af43d806000843e8160008114610478578184f35b8184fd5b34801561048857600080fd5b506104916119ed565b604051808215151515815260200191505060405180910390f35b3480156104b757600080fd5b506104f660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a00565b604051808215151515815260200191505060405180910390f35b34801561051c57600080fd5b5061053f6004803603810190808035600019169060200190929190505050611a2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058d57600080fd5b506105b66004803603810190808035906020019092919080359060200190929190505050611a62565b6040518082815260200191505060405180910390f35b3480156105d857600080fd5b506105f760048036038101908080359060200190929190505050611a87565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561064557600080fd5b5061066e6004803603810190808035906020019092919080359060200190929190505050611aba565b6040518082815260200191505060405180910390f35b34801561069057600080fd5b50610699611adf565b6040518082815260200191505060405180910390f35b3480156106bb57600080fd5b506106da60048036038101908080359060200190929190505050611ae5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072857600080fd5b5061075d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b18565b604051808215151515815260200191505060405180910390f35b34801561078357600080fd5b506107b8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b38565b604051808215151515815260200191505060405180910390f35b3480156107de57600080fd5b5061081d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b58565b604051808215151515815260200191505060405180910390f35b34801561084357600080fd5b50610878600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b87565b604051808215151515815260200191505060405180910390f35b34801561089e57600080fd5b506108bd60048036038101908080359060200190929190505050611ba7565b6040518082815260200191505060405180910390f35b3480156108df57600080fd5b50610914600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bbf565b6040518082815260200191505060405180910390f35b34801561093657600080fd5b5061097560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd7565b6040518082815260200191505060405180910390f35b34801561099757600080fd5b506109c06004803603810190808035906020019092919080359060200190929190505050611bfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a0e57600080fd5b50610a4d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c49565b6040518082815260200191505060405180910390f35b348015610a6f57600080fd5b50610a986004803603810190808035906020019092919080359060200190929190505050611c6e565b6040518082815260200191505060405180910390f35b348015610aba57600080fd5b50610ad960048036038101908080359060200190929190505050611c93565b6040518082815260200191505060405180910390f35b348015610afb57600080fd5b50610b3a60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cab565b6040518082815260200191505060405180910390f35b348015610b5c57600080fd5b50610b7b60048036038101908080359060200190929190505050611cd0565b6040518082815260200191505060405180910390f35b348015610b9d57600080fd5b50610ba6611ce8565b6040518082815260200191505060405180910390f35b348015610bc857600080fd5b50610bd1611cee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1f57600080fd5b50610c54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d14565b6040518082815260200191505060405180910390f35b348015610c7657600080fd5b50610c9f6004803603810190808035906020019092919080359060200190929190505050611d2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ced57600080fd5b50610d166004803603810190808035906020019092919080359060200190929190505050611d6e565b6040518082815260200191505060405180910390f35b348015610d3857600080fd5b50610d5760048036038101908080359060200190929190505050611d93565b604051808215151515815260200191505060405180910390f35b348015610d7d57600080fd5b50610d9c60048036038101908080359060200190929190505050611db3565b6040518082815260200191505060405180910390f35b348015610dbe57600080fd5b50610df3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dcb565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e33578082015181840152602081019050610e18565b50505050905090810190601f168015610e605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e7a57600080fd5b50610e83611e7b565b6040518082815260200191505060405180910390f35b348015610ea557600080fd5b50610ece6004803603810190808035906020019092919080359060200190929190505050611e81565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f1c57600080fd5b50610f456004803603810190808035906020019092919080359060200190929190505050611ece565b604051808215151515815260200191505060405180910390f35b348015610f6b57600080fd5b50610f8a60048036038101908080359060200190929190505050611efd565b6040518082815260200191505060405180910390f35b348015610fac57600080fd5b50610fcb60048036038101908080359060200190929190505050611f15565b6040518082815260200191505060405180910390f35b348015610fed57600080fd5b50610ff6611f2d565b005b34801561100457600080fd5b5061102360048036038101908080359060200190929190505050611fff565b6040518082815260200191505060405180910390f35b34801561104557600080fd5b5061106460048036038101908080359060200190929190505050612017565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110b257600080fd5b506110e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204a565b604051808215151515815260200191505060405180910390f35b34801561110d57600080fd5b5061114c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061206a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561119a57600080fd5b506111a36120b6565b6040518082815260200191505060405180910390f35b3480156111c557600080fd5b506111ce6120bc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561121c57600080fd5b5061123b600480360381019080803590602001909291905050506120e5565b6040518082815260200191505060405180910390f35b34801561125d57600080fd5b506112666120fd565b604051808215151515815260200191505060405180910390f35b34801561128c57600080fd5b506112b56004803603810190808035906020019092919080359060200190929190505050612154565b6040518082815260200191505060405180910390f35b3480156112d757600080fd5b506113006004803603810190808035906020019092919080359060200190929190505050612179565b6040518082815260200191505060405180910390f35b34801561132257600080fd5b506113416004803603810190808035906020019092919050505061219e565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182815260200194505050505060405180910390f35b3480156113a857600080fd5b506113b161220a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156113ff57600080fd5b5061143e60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612230565b604051808215151515815260200191505060405180910390f35b34801561146457600080fd5b506114836004803603810190808035906020019092919050505061225f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156114d157600080fd5b5061151060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612292565b6040518082815260200191505060405180910390f35b34801561153257600080fd5b5061157b6004803603810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b7565b6040518082815260200191505060405180910390f35b34801561159d57600080fd5b506115c660048036038101908080359060200190929190803590602001909291905050506122e9565b6040518082815260200191505060405180910390f35b3480156115e857600080fd5b506116076004803603810190808035906020019092919050505061230e565b6040518082815260200191505060405180910390f35b34801561162957600080fd5b5061164860048036038101908080359060200190929190505050612326565b6040518082815260200191505060405180910390f35b34801561166a57600080fd5b50611693600480360381019080803590602001909291908035906020019092919050505061233e565b6040518082815260200191505060405180910390f35b3480156116b557600080fd5b506116be612363565b6040518082815260200191505060405180910390f35b3480156116e057600080fd5b506117036004803603810190808035600019169060200190929190505050612369565b604051808215151515815260200191505060405180910390f35b34801561172957600080fd5b506117526004803603810190808035906020019092919080359060200190929190505050612389565b6040518082815260200191505060405180910390f35b34801561177457600080fd5b50611793600480360381019080803590602001909291905050506123ae565b604051808215151515815260200191505060405180910390f35b3480156117b957600080fd5b506117ee600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561183c57600080fd5b5061187b60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612401565b6040518082815260200191505060405180910390f35b34801561189d57600080fd5b506118a6612426565b6040518082815260200191505060405180910390f35b3480156118c857600080fd5b506118fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061242c565b005b34801561190b57600080fd5b5061192a6004803603810190808035906020019092919050505061244b565b6040518082815260200191505060405180910390f35b34801561194c57600080fd5b50611955612463565b6040518082815260200191505060405180910390f35b34801561197757600080fd5b506119ac600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612469565b6040518082815260200191505060405180910390f35b3480156119ce57600080fd5b506119d7612481565b6040518082815260200191505060405180910390f35b604160149054906101000a900460ff1681565b60346020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60236020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e602052816000526040600020602052806000526040600020600091509150505481565b603a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006602052816000526040600020602052806000526040600020600091509150505481565b60295481565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60216020528060005260406000206000915054906101000a900460ff1681565b601d6020528060005260406000206000915054906101000a900460ff1681565b601b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60426020528060005260406000206000915054906101000a900460ff1681565b60176020528060005260406000206000915090505481565b60396020528060005260406000206000915090505481565b601a602052816000526040600020602052806000526040600020600091509150505481565b603060205281600052604060002081815481101515611c1757fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6036602052816000526040600020602052806000526040600020600091509150505481565b6014602052816000526040600020602052806000526040600020600091509150505481565b60186020528060005260406000206000915090505481565b6035602052816000526040600020602052806000526040600020600091509150505481565b60106020528060005260406000206000915090505481565b602b5481565b604160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60256020528060005260406000206000915090505481565b60326020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052816000526040600020602052806000526040600020600091509150505481565b60386020528060005260406000206000915054906101000a900460ff1681565b60096020528060005260406000206000915090505481565b60226020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e735780601f10611e4857610100808354040283529160200191611e73565b820191906000526020600020905b815481529060010190602001808311611e5657829003601f168201915b505050505081565b603e5481565b602f60205281600052604060002081815481101515611e9c57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60166020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600c6020528060005260406000206000915090505481565b60196020528060005260406000206000915090505481565b611f356120fd565b1515611f4057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600a6020528060005260406000206000915090505481565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601e6020528060005260406000206000915054906101000a900460ff1681565b602080528160005260406000208181548110151561208457fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60285481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b602e6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6011602052816000526040600020602052806000526040600020600091509150505481565b6008602052816000526040600020602052806000526040600020600091509150505481565b603f818154811015156121ad57fe5b90600052602060002090600302016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154905084565b604060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60336020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60316020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b602c602052816000526040600020602052806000526040600020600091509150505481565b602d60205282600052604060002060205281600052604060002060205280600052604060002060009250925050505481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60126020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b6015602052816000526040600020602052806000526040600020600091509150505481565b60265481565b60246020528060005260406000206000915054906101000a900460ff1681565b6013602052816000526040600020602052806000526040600020600091509150505481565b60376020528060005260406000206000915054906101000a900460ff1681565b601f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601c602052816000526040600020602052806000526040600020600091509150505481565b60275481565b6124346120fd565b151561243f57600080fd5b61244881612487565b50565b600d6020528060005260406000206000915090505481565b603d5481565b603b6020528060005260406000206000915090505481565b602a5481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156124c357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582002d0e59b8523ee3c0698f0c0de71f8af70cd51da19798388c363347f5a4456480029",
  "sourceMap": "84:1347:5:-;;;9977:42:4;9947:72;;;;;;;;;;;;;;;;;;;;10051:42;10025:68;;;;;;;;;;;;;;;;;;;;310:586:5;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:586:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:22;489:13;518:10:8;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;415:64:5;;;;;;;;;;;;;;;;;;;;;;;;;522:9;512:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;512:20:5;;;;;;;;;;;;;;;;489:44;;563:16;543:9;:17;553:6;543:17;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;589:14;609:9;589:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;589:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;663:14;:21;;;;629:20;650:9;629:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;629:31:5;;;;;;;;;;;;;;;;;;;;;:55;;;;734:16;699:71;;730:1;699:71;;714:6;699:71;;;;759:9;699:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;699:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:14;:12;;;:14;;;:::i;:::-;310:586;;;84:1347;;170:1033:0;395:6;236:4;214:7;:19;222:10;214:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;268:5;250:15;:23;;;;320:1;305:12;:16;;;;345:1;331:11;:15;;;;370:1;356:11;:15;;;;404:1;395:10;;390:798;412:1;407;:6;;390:798;;;463:1;434:23;:26;458:1;434:26;;;;;;;;;;;:30;;;;501:10;478:17;:20;496:1;478:20;;;;;;;;;;;:33;;;;552:17;:20;570:1;552:20;;;;;;;;;;;;525:21;:24;547:1;525:24;;;;;;;;;;;:47;;;;644:15;;586:24;:27;611:1;586:27;;;;;;;;;;;:55;614:23;:26;638:1;614:26;;;;;;;;;;;;586:55;;;;;;;;;;;:73;;;;730:4;673:23;:26;697:1;673:26;;;;;;;;;;;:54;700:23;:26;724:1;700:26;;;;;;;;;;;;673:54;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;898:1;861:19;:33;881:12;;861:33;;;;;;;;;;;;:38;857:143;;;982:3;919:25;:28;945:1;919:28;;;;;;;;;;;:60;977:1;948:23;:26;972:1;948:26;;;;;;;;;;;;:30;919:60;;;;;;;;;;;:66;;;;857:143;1087:3;1026:27;:30;1054:1;1026:30;;;;;;;;;;;:58;1057:23;:26;1081:1;1057:26;;;;;;;;;;;;1026:58;;;;;;;;;;;:64;;;;1162:15;;1104:24;:27;1129:1;1104:27;;;;;;;;;;;:55;1132:23;:26;1156:1;1132:26;;;;;;;;;;;;1104:55;;;;;;;;;;;:73;;;;415:3;;;;;;;390:798;;;170:1033;:::o;84:1347:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "84:1347:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:16;959:9;:18;969:7;;;;959:18;;;;;;;;;;;;;;;;;;;;;;;;;;;940:37;;1015:1;995:22;;:8;:22;;;;987:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:4;1090:11;1135:12;1132:1;1127:3;1114:34;1225:1;1222;1208:12;1203:3;1193:8;1188:3;1175:52;1252:14;1302:4;1299:1;1294:3;1279:28;1327:6;1351:1;1346:26;;;;1407:4;1402:3;1394:18;1346:26;1366:4;1361:3;1354:17;10104:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10104:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;8108:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8108:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5978:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5978:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2192:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8821:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8821:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:82:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6761:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6761:23:4;;;;;;;;;;;;;;;;;;;;;;;2341:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2341:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5669:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5669:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5050:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5050:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4672:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4672:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10139:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10139:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3879:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8733:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8733:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4360:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4360:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7606:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7606:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8342:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8342:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3282:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4002:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4002:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8223:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8223:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2568:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6959:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6959:25:4;;;;;;;;;;;;;;;;;;;;;;;10025:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10025:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;6367:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6367:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7823:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7823:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8570:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8570:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1155:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5800:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5800:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9505:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9505:19:4;;;;;;;;;;;;;;;;;;;;;;;7510:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7510:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3681:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3681:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1710:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4140:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:8;;;;;;1366:51:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1567:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5290:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5522:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6681:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6681:24:4;;;;;;;;;;;;;;;;;;;;;;;639:70:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:51:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7404:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:72:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2749:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9530:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9530:21:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9947:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9947:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;7974:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7974:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7703:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7703:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7061:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7061:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7211:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7211:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2947:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;805:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3490:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3490:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6496:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6496:28:4;;;;;;;;;;;;;;;;;;;;;;;6158:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6158:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3081:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3081:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8467:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8467:45:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5394:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5394:54:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6615:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6615:27:4;;;;;;;;;;;;;;;;;;;;;;;1561:101:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:49:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1920:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9356:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9356:25:4;;;;;;;;;;;;;;;;;;;;;;;9014:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9014:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6836:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6836:23:4;;;;;;;;;;;;;;;;;;;;;;;10104:24;;;;;;;;;;;;;:::o;8108:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5978:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;2192:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8821:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;637:82::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6761:23::-;;;;:::o;2341:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;5669:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;5050:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;4672:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10139:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;3879:53::-;;;;;;;;;;;;;;;;;:::o;8733:48::-;;;;;;;;;;;;;;;;;:::o;4360:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7606:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8342:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3282:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4002:47::-;;;;;;;;;;;;;;;;;:::o;8223:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2568:48::-;;;;;;;;;;;;;;;;;:::o;6959:25::-;;;;:::o;10025:68::-;;;;;;;;;;;;;:::o;6367:49::-;;;;;;;;;;;;;;;;;:::o;7823:75::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;360:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8570:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1155:46::-;;;;;;;;;;;;;;;;;:::o;5800:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9505:19::-;;;;:::o;7510:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3681:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1710:54::-;;;;;;;;;;;;;;;;;:::o;4140:51::-;;;;;;;;;;;;;;;;;:::o;1273:127:8:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1366:51:4:-;;;;;;;;;;;;;;;;;:::o;1567:52::-;;;;;;;;;;;;;;;;;;;;;;:::o;5290:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;5522:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6681:24::-;;;;:::o;639:70:8:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;7404:51:4:-;;;;;;;;;;;;;;;;;:::o;926:83:8:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;2749:72:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;989:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9530:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9947:72::-;;;;;;;;;;;;;:::o;7974:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7703:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;7061:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7211:83::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;177:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2947:49::-;;;;;;;;;;;;;;;;;:::o;805:47::-;;;;;;;;;;;;;;;;;:::o;3490:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6496:28::-;;;;:::o;6158:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;3081:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8467:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;5394:54::-;;;;;;;;;;;;;;;;;;;;;;:::o;4897:77::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6615:27::-;;;;:::o;1561:101:8:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1920:49:4:-;;;;;;;;;;;;;;;;;:::o;9356:25::-;;;;:::o;9014:51::-;;;;;;;;;;;;;;;;;:::o;6836:23::-;;;;:::o;1796:169:8:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o",
  "source": "pragma solidity ^0.4.24;\npragma experimental \"v0.5.0\";\nimport \"./Initializer.sol\";\n\ncontract Transparent is Initializer {\n    \n    event CommitMessage(string message);\n    event FunctionUpdate(bytes4 indexed functionId, address indexed oldDelegate, address indexed newDelegate, string functionSignature);\n\n    constructor(address _erc1538Delegate) public {\n\n        //Adding ERC1538 updateContract function\n        bytes memory signature = \"updateContract(address,string,string)\";\n        bytes4 funcId = bytes4(keccak256(signature));\n        delegates[funcId] = _erc1538Delegate;\n        funcSignatures.push(signature);\n        funcSignatureToIndex[signature] = funcSignatures.length;\n        emit FunctionUpdate(funcId, address(0), _erc1538Delegate, string(signature));\n        emit CommitMessage(\"Added ERC1538 updateContract function at contract creation\");\n    \n        _initializer();\n    }\n\n    function() external payable {\n        address delegate = delegates[msg.sig];\n        require(delegate != address(0), \"Function does not exist.\");\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, delegate, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 {revert(ptr, size)}\n            default {return (ptr, size)}\n        }\n    }\n}",
  "sourcePath": "/Users/Amir/last-pixel-contracts/contracts/Transparent.sol",
  "ast": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Transparent.sol",
    "exportedSymbols": {
      "Transparent": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 729,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "id": 730,
        "literals": [
          "experimental",
          "v0.5.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:29:5"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Initializer.sol",
        "file": "./Initializer.sol",
        "id": 731,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 124,
        "src": "55:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 732,
              "name": "Initializer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 123,
              "src": "108:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializer_$123",
                "typeString": "contract Initializer"
              }
            },
            "id": 733,
            "nodeType": "InheritanceSpecifier",
            "src": "108:11:5"
          }
        ],
        "contractDependencies": [
          123,
          432,
          727,
          1189
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          123,
          727,
          432,
          1189
        ],
        "name": "Transparent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 737,
            "name": "CommitMessage",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "151:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "150:16:5"
            },
            "src": "131:36:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 747,
            "name": "FunctionUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "indexed": true,
                  "name": "functionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "193:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "indexed": true,
                  "name": "oldDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "220:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "indexed": true,
                  "name": "newDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "249:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "indexed": false,
                  "name": "functionSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "278:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "192:111:5"
            },
            "src": "172:132:5"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "355:541:5",
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "name": "signature",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "415:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 755,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "757064617465436f6e747261637428616464726573732c737472696e672c737472696e6729",
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "440:39:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6145556710ea545cbd23b05426d1c42aa5025511b47f500956dfd3af0ab263ee",
                      "typeString": "literal_string \"updateContract(address,string,string)\""
                    },
                    "value": "updateContract(address,string,string)"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:64:5"
                },
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "name": "funcId",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "489:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 756,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "489:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 763,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "522:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 759,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "512:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "512:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "505:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": "bytes4"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "543:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                          "typeString": "mapping(bytes4 => address)"
                        }
                      },
                      "id": 766,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "funcId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "553:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "543:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 767,
                      "name": "_erc1538Delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "563:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "543:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "543:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "609:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "funcSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "589:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "589:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes_storage_$returns$_t_uint256_$",
                        "typeString": "function (bytes storage ref) returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "589:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "funcSignatureToIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "629:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes_memory_$_t_uint256_$",
                          "typeString": "mapping(bytes memory => uint256)"
                        }
                      },
                      "id": 778,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 777,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "650:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "629:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 779,
                        "name": "funcSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "663:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "663:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "629:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "629:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 784,
                        "name": "funcId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "714:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "730:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "722:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "722:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "_erc1538Delegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "734:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 790,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "759:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "752:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "752:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 783,
                      "name": "FunctionUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "699:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes4,address,address,string memory)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:71:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "EmitStatement",
                  "src": "694:76:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4164646564204552433135333820757064617465436f6e74726163742066756e6374696f6e20617420636f6e7472616374206372656174696f6e",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:60:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a59507b444e9cf7401adee1e6ab833d42e0e49661985984591c7f0123a26e73c",
                          "typeString": "literal_string \"Added ERC1538 updateContract function at contract creation\""
                        },
                        "value": "Added ERC1538 updateContract function at contract creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a59507b444e9cf7401adee1e6ab833d42e0e49661985984591c7f0123a26e73c",
                          "typeString": "literal_string \"Added ERC1538 updateContract function at contract creation\""
                        }
                      ],
                      "id": 794,
                      "name": "CommitMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "785:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "EmitStatement",
                  "src": "780:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 798,
                      "name": "_initializer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "875:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "875:14:5"
                }
              ]
            },
            "documentation": null,
            "id": 802,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "name": "_erc1538Delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "322:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "321:26:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:5"
            },
            "scope": 824,
            "src": "310:586:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "930:499:5",
              "statements": [
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "name": "delegate",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "940:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "940:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 807,
                      "name": "delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "959:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                        "typeString": "mapping(bytes4 => address)"
                      }
                    },
                    "id": 810,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "969:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "969:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "959:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "940:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 813,
                          "name": "delegate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "995:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1015:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1007:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1007:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "995:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e20646f6573206e6f742065786973742e",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1019:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        },
                        "value": "Function does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1207,
                        1208
                      ],
                      "referencedDeclaration": 1208,
                      "src": "987:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "987:59:5"
                },
                {
                  "externalReferences": [
                    {
                      "delegate": {
                        "declaration": 806,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1193:8:5",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 821,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), delegate, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "1056:373:5"
                }
              ]
            },
            "documentation": null,
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:5"
            },
            "scope": 824,
            "src": "902:527:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 825,
        "src": "84:1347:5"
      }
    ],
    "src": "0:1431:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Transparent.sol",
    "exportedSymbols": {
      "Transparent": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 729,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "id": 730,
        "literals": [
          "experimental",
          "v0.5.0"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:29:5"
      },
      {
        "absolutePath": "/Users/Amir/last-pixel-contracts/contracts/Initializer.sol",
        "file": "./Initializer.sol",
        "id": 731,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 124,
        "src": "55:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 732,
              "name": "Initializer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 123,
              "src": "108:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializer_$123",
                "typeString": "contract Initializer"
              }
            },
            "id": 733,
            "nodeType": "InheritanceSpecifier",
            "src": "108:11:5"
          }
        ],
        "contractDependencies": [
          123,
          432,
          727,
          1189
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          123,
          727,
          432,
          1189
        ],
        "name": "Transparent",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 737,
            "name": "CommitMessage",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "151:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "150:16:5"
            },
            "src": "131:36:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 747,
            "name": "FunctionUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "indexed": true,
                  "name": "functionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "193:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "indexed": true,
                  "name": "oldDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "220:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "indexed": true,
                  "name": "newDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "249:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "indexed": false,
                  "name": "functionSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "278:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "192:111:5"
            },
            "src": "172:132:5"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "355:541:5",
              "statements": [
                {
                  "assignments": [
                    753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 753,
                      "name": "signature",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "415:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 755,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "757064617465436f6e747261637428616464726573732c737472696e672c737472696e6729",
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "440:39:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6145556710ea545cbd23b05426d1c42aa5025511b47f500956dfd3af0ab263ee",
                      "typeString": "literal_string \"updateContract(address,string,string)\""
                    },
                    "value": "updateContract(address,string,string)"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:64:5"
                },
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "name": "funcId",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "489:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 756,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "489:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 763,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 760,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "522:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 759,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "512:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "512:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "505:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": "bytes4"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "543:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                          "typeString": "mapping(bytes4 => address)"
                        }
                      },
                      "id": 766,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "funcId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "553:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "543:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 767,
                      "name": "_erc1538Delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "563:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "543:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "543:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "609:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "funcSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "589:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "589:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes_storage_$returns$_t_uint256_$",
                        "typeString": "function (bytes storage ref) returns (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "589:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "funcSignatureToIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "629:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes_memory_$_t_uint256_$",
                          "typeString": "mapping(bytes memory => uint256)"
                        }
                      },
                      "id": 778,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 777,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "650:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "629:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 779,
                        "name": "funcSignatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "663:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage",
                          "typeString": "bytes storage ref[] storage ref"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "663:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "629:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "629:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 784,
                        "name": "funcId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "714:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "730:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "722:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "722:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "_erc1538Delegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "734:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 790,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "759:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "752:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "752:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 783,
                      "name": "FunctionUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "699:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes4,address,address,string memory)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:71:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "EmitStatement",
                  "src": "694:76:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4164646564204552433135333820757064617465436f6e74726163742066756e6374696f6e20617420636f6e7472616374206372656174696f6e",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "799:60:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a59507b444e9cf7401adee1e6ab833d42e0e49661985984591c7f0123a26e73c",
                          "typeString": "literal_string \"Added ERC1538 updateContract function at contract creation\""
                        },
                        "value": "Added ERC1538 updateContract function at contract creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a59507b444e9cf7401adee1e6ab833d42e0e49661985984591c7f0123a26e73c",
                          "typeString": "literal_string \"Added ERC1538 updateContract function at contract creation\""
                        }
                      ],
                      "id": 794,
                      "name": "CommitMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 737,
                      "src": "785:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:75:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "EmitStatement",
                  "src": "780:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 798,
                      "name": "_initializer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "875:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "875:14:5"
                }
              ]
            },
            "documentation": null,
            "id": 802,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 749,
                  "name": "_erc1538Delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "322:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "321:26:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:5"
            },
            "scope": 824,
            "src": "310:586:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "930:499:5",
              "statements": [
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "name": "delegate",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "940:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "940:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 807,
                      "name": "delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "959:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                        "typeString": "mapping(bytes4 => address)"
                      }
                    },
                    "id": 810,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "969:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "969:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "959:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "940:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 813,
                          "name": "delegate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "995:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1015:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1007:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1007:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "995:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e20646f6573206e6f742065786973742e",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1019:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        },
                        "value": "Function does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fa78a13653e06ad99b0fd069a1f00be9aaee42e8019fef06fc5450b72e1b65e",
                          "typeString": "literal_string \"Function does not exist.\""
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1207,
                        1208
                      ],
                      "referencedDeclaration": 1208,
                      "src": "987:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "987:59:5"
                },
                {
                  "externalReferences": [
                    {
                      "delegate": {
                        "declaration": 806,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1193:8:5",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 821,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), delegate, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "1056:373:5"
                }
              ]
            },
            "documentation": null,
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "910:2:5"
            },
            "payable": true,
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:5"
            },
            "scope": 824,
            "src": "902:527:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 825,
        "src": "84:1347:5"
      }
    ],
    "src": "0:1431:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8272f6c32108d51529debc71dd24d1c1d3accb78",
      "transactionHash": "0x136aeb498a381bc4b6a42524f2b0c5c37b5d686d340f58251cd8ac0991cadb3c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-07T13:29:50.927Z"
}